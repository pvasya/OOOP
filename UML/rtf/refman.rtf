{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment MyNotesMaker  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0 \par
}}MyNotesMaker}
{\comment Generated by doxygen 1.10.0.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt MyNotesMaker}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 1.0\par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\par \pard\plain 
\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
My Personal Index Page\par \pard\plain 
{\tc\tcl1 \v My Personal Index Page}
{\xe \v My Personal Index Page}
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Introduction
\par}
{\tc\tcl2 \v Introduction}
\'D0\'9F\'D1\'80\'D0\'BE\'D0\'B3\'D1\'80\'D0\'B0\'D0\'BC\'D0\'B0 MyNotesMaker - \'D1\'86\'D0\'B5 \'D0\'B7\'D1\'80\'D1\'83\'D1\'87\'D0\'BD\'D0\'B8\'D0\'B9 \'D1\'96\'D0\'BD\'D1\'81\'D1\'82\'D1\'80\'D1\'83\'D0\'BC\'D0\'B5\'D0\'BD\'D1\'82 \'D0\'B4\'D0\'BB\'D1\'8F \'D1\'81\'D1\'82\'D0\'B2\'D0\'BE\'D1\'80\'D0\'B5\'D0\'BD\'D0\'BD\'D1\'8F, \'D0\'B7\'D0\'B1\'D0\'B5\'D1\'80\'D0\'B5\'D0\'B6\'D0\'B5\'D0\'BD\'D0\'BD\'D1\'8F \'D1\'82\'D0\'B0 \'D1\'83\'D0\'BF\'D1\'80\'D0\'B0\'D0\'B2\'D0\'BB\'D1\'96\'D0\'BD\'D0\'BD\'D1\'8F \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BA\'D0\'B0\'D0\'BC\'D0\'B8. \'D0\'97\'D0\'B0\'D0\'B2\'D0\'B4\'D1\'8F\'D0\'BA\'D0\'B8 \'D0\'BF\'D1\'80\'D0\'BE\'D1\'81\'D1\'82\'D0\'BE\'D0\'BC\'D1\'83 \'D1\'82\'D0\'B0 \'D1\'96\'D0\'BD\'D1\'82\'D1\'83\'D1\'97\'D1\'82\'D0\'B8\'D0\'B2\'D0\'BD\'D0\'BE \'D0\'B7\'D1\'80\'D0\'BE\'D0\'B7\'D1\'83\'D0\'BC\'D1\'96\'D0\'BB\'D0\'BE\'D0\'BC\'D1\'83 \'D1\'96\'D0\'BD\'D1\'82\'D0\'B5\'D1\'80\'D1\'84\'D0\'B5\'D0\'B9\'D1\'81\'D1\'83 \'D0\'BA\'D0\'BE\'D1\'80\'D0\'B8\'D1\'81\'D1\'82\'D1\'83\'D0\'B2\'D0\'B0\'D1\'87\'D0\'B0, MyNotesMaker \'D0\'B4\'D0\'BE\'D0\'B7\'D0\'B2\'D0\'BE\'D0\'BB\'D1\'8F\'D1\'94 \'D0\'BB\'D0\'B5\'D0\'B3\'D0\'BA\'D0\'BE \'D1\'81\'D1\'82\'D0\'B2\'D0\'BE\'D1\'80\'D1\'8E\'D0\'B2\'D0\'B0\'D1\'82\'D0\'B8 \'D0\'BD\'D0\'BE\'D0\'B2\'D1\'96 \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BA\'D0\'B8, \'D1\'80\'D0\'B5\'D0\'B4\'D0\'B0\'D0\'B3\'D1\'83\'D0\'B2\'D0\'B0\'D1\'82\'D0\'B8 \'D0\'B2\'D0\'B6\'D0\'B5 \'D1\'96\'D1\'81\'D0\'BD\'D1\'83\'D1\'8E\'D1\'87\'D1\'96 \'D1\'82\'D0\'B0 \'D1\'88\'D0\'B2\'D0\'B8\'D0\'B4\'D0\'BA\'D0\'BE \'D0\'B7\'D0\'BD\'D0\'B0\'D1\'85\'D0\'BE\'D0\'B4\'D0\'B8\'D1\'82\'D0\'B8 \'D0\'BF\'D0\'BE\'D1\'82\'D1\'80\'D1\'96\'D0\'B1\'D0\'BD\'D1\'83 \'D1\'96\'D0\'BD\'D1\'84\'D0\'BE\'D1\'80\'D0\'BC\'D0\'B0\'D1\'86\'D1\'96\'D1\'8E. \par}
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D0\'9E\'D1\'81\'D0\'BD\'D0\'BE\'D0\'B2\'D0\'BD\'D1\'96 \'D0\'BC\'D0\'BE\'D0\'B6\'D0\'BB\'D0\'B8\'D0\'B2\'D0\'BE\'D1\'81\'D1\'82\'D1\'96 \'D0\'BF\'D1\'80\'D0\'BE\'D0\'B3\'D1\'80\'D0\'B0\'D0\'BC\'D0\'B8 \'D0\'B2\'D0\'BA\'D0\'BB\'D1\'8E\'D1\'87\'D0\'B0\'D1\'8E\'D1\'82\'D1\'8C:
\par}
{\tc\tcl2 \v \'D0\'9E\'D1\'81\'D0\'BD\'D0\'BE\'D0\'B2\'D0\'BD\'D1\'96 \'D0\'BC\'D0\'BE\'D0\'B6\'D0\'BB\'D0\'B8\'D0\'B2\'D0\'BE\'D1\'81\'D1\'82\'D1\'96 \'D0\'BF\'D1\'80\'D0\'BE\'D0\'B3\'D1\'80\'D0\'B0\'D0\'BC\'D0\'B8 \'D0\'B2\'D0\'BA\'D0\'BB\'D1\'8E\'D1\'87\'D0\'B0\'D1\'8E\'D1\'82\'D1\'8C:}
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D0\'A1\'D1\'82\'D0\'B2\'D0\'BE\'D1\'80\'D0\'B5\'D0\'BD\'D0\'BD\'D1\'8F \'D1\'82\'D0\'B0 \'D1\'80\'D0\'B5\'D0\'B4\'D0\'B0\'D0\'B3\'D1\'83\'D0\'B2\'D0\'B0\'D0\'BD\'D0\'BD\'D1\'8F \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BE\'D0\'BA:
\par}
{\tc\tcl3 \v \'D0\'A1\'D1\'82\'D0\'B2\'D0\'BE\'D1\'80\'D0\'B5\'D0\'BD\'D0\'BD\'D1\'8F \'D1\'82\'D0\'B0 \'D1\'80\'D0\'B5\'D0\'B4\'D0\'B0\'D0\'B3\'D1\'83\'D0\'B2\'D0\'B0\'D0\'BD\'D0\'BD\'D1\'8F \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BE\'D0\'BA:}
\'D0\'9A\'D0\'BE\'D1\'80\'D0\'B8\'D1\'81\'D1\'82\'D1\'83\'D0\'B2\'D0\'B0\'D1\'87\'D1\'96 \'D0\'BC\'D0\'BE\'D0\'B6\'D1\'83\'D1\'82\'D1\'8C \'D1\'81\'D1\'82\'D0\'B2\'D0\'BE\'D1\'80\'D1\'8E\'D0\'B2\'D0\'B0\'D1\'82\'D0\'B8 \'D0\'BD\'D0\'BE\'D0\'B2\'D1\'96 \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BA\'D0\'B8, \'D0\'B4\'D0\'BE\'D0\'B4\'D0\'B0\'D0\'B2\'D0\'B0\'D1\'82\'D0\'B8 \'D1\'82\'D0\'B5\'D0\'BA\'D1\'81\'D1\'82, \'D1\'84\'D0\'BE\'D1\'80\'D0\'BC\'D0\'B0\'D1\'82\'D1\'83\'D0\'B2\'D0\'B0\'D1\'82\'D0\'B8 \'D0\'B9\'D0\'BE\'D0\'B3\'D0\'BE, \'D0\'B2\'D0\'B8\'D0\'B1\'D0\'B8\'D1\'80\'D0\'B0\'D1\'82\'D0\'B8 \'D1\'88\'D1\'80\'D0\'B8\'D1\'84\'D1\'82\'D0\'B8. \par}
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D0\'97\'D0\'B1\'D0\'B5\'D1\'80\'D0\'B5\'D0\'B6\'D0\'B5\'D0\'BD\'D0\'BD\'D1\'8F \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BE\'D0\'BA:
\par}
{\tc\tcl3 \v \'D0\'97\'D0\'B1\'D0\'B5\'D1\'80\'D0\'B5\'D0\'B6\'D0\'B5\'D0\'BD\'D0\'BD\'D1\'8F \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BE\'D0\'BA:}
\'D0\'A3\'D1\'81\'D1\'96 \'D1\'81\'D1\'82\'D0\'B2\'D0\'BE\'D1\'80\'D0\'B5\'D0\'BD\'D1\'96 \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BA\'D0\'B8 \'D0\'B7\'D0\'B1\'D0\'B5\'D1\'80\'D1\'96\'D0\'B3\'D0\'B0\'D1\'8E\'D1\'82\'D1\'8C\'D1\'81\'D1\'8F \'D0\'B2 \'D1\'81\'D0\'BF\'D0\'B5\'D1\'86\'D1\'96\'D0\'B0\'D0\'BB\'D1\'8C\'D0\'BD\'D0\'BE\'D0\'BC\'D1\'83 \'D1\'84\'D0\'B0\'D0\'B9\'D0\'BB\'D1\'96 \'D1\'83 \'D1\'84\'D0\'BE\'D1\'80\'D0\'BC\'D0\'B0\'D1\'82\'D1\'96 JSON, \'D1\'89\'D0\'BE \'D0\'B4\'D0\'BE\'D0\'B7\'D0\'B2\'D0\'BE\'D0\'BB\'D1\'8F\'D1\'94 \'D0\'B7\'D0\'B1\'D0\'B5\'D1\'80\'D1\'96\'D0\'B3\'D0\'B0\'D1\'82\'D0\'B8 \'D1\'96\'D0\'BD\'D1\'84\'D0\'BE\'D1\'80\'D0\'BC\'D0\'B0\'D1\'86\'D1\'96\'D1\'8E \'D1\'83 \'D1\'81\'D1\'82\'D1\'80\'D1\'83\'D0\'BA\'D1\'82\'D1\'83\'D1\'80\'D0\'BE\'D0\'B2\'D0\'B0\'D0\'BD\'D0\'BE\'D0\'BC\'D1\'83 \'D0\'B2\'D0\'B8\'D0\'B3\'D0\'BB\'D1\'8F\'D0\'B4\'D1\'96 \'D1\'82\'D0\'B0 \'D0\'BB\'D0\'B5\'D0\'B3\'D0\'BA\'D0\'BE \'D0\'BE\'D0\'B1\'D0\'BC\'D1\'96\'D0\'BD\'D1\'8E\'D0\'B2\'D0\'B0\'D1\'82\'D0\'B8\'D1\'81\'D1\'8F \'D0\'BD\'D0\'B5\'D1\'8E. \par}
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D0\'A3\'D0\'BF\'D1\'80\'D0\'B0\'D0\'B2\'D0\'BB\'D1\'96\'D0\'BD\'D0\'BD\'D1\'8F \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BA\'D0\'B0\'D0\'BC\'D0\'B8:
\par}
{\tc\tcl3 \v \'D0\'A3\'D0\'BF\'D1\'80\'D0\'B0\'D0\'B2\'D0\'BB\'D1\'96\'D0\'BD\'D0\'BD\'D1\'8F \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BA\'D0\'B0\'D0\'BC\'D0\'B8:}
\'D0\'9A\'D0\'BE\'D1\'80\'D0\'B8\'D1\'81\'D1\'82\'D1\'83\'D0\'B2\'D0\'B0\'D1\'87\'D1\'96 \'D0\'BC\'D0\'BE\'D0\'B6\'D1\'83\'D1\'82\'D1\'8C \'D1\'88\'D0\'B2\'D0\'B8\'D0\'B4\'D0\'BA\'D0\'BE \'D0\'BF\'D0\'B5\'D1\'80\'D0\'B5\'D0\'B3\'D0\'BB\'D1\'8F\'D0\'B4\'D0\'B0\'D1\'82\'D0\'B8 \'D1\'81\'D0\'BF\'D0\'B8\'D1\'81\'D0\'BE\'D0\'BA \'D1\'81\'D1\'82\'D0\'B2\'D0\'BE\'D1\'80\'D0\'B5\'D0\'BD\'D0\'B8\'D1\'85 \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BE\'D0\'BA, \'D0\'B2\'D0\'B8\'D0\'B1\'D0\'B8\'D1\'80\'D0\'B0\'D1\'82\'D0\'B8 \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BA\'D0\'B8 \'D0\'B4\'D0\'BB\'D1\'8F \'D0\'B2\'D1\'96\'D0\'B4\'D0\'BA\'D1\'80\'D0\'B8\'D1\'82\'D1\'82\'D1\'8F \'D1\'82\'D0\'B0 \'D0\'B2\'D0\'B8\'D0\'B4\'D0\'B0\'D0\'BB\'D1\'8F\'D1\'82\'D0\'B8 \'D0\'BD\'D0\'B5\'D0\'BF\'D0\'BE\'D1\'82\'D1\'80\'D1\'96\'D0\'B1\'D0\'BD\'D1\'96 \'D0\'B7\'D0\'B0\'D0\'BF\'D0\'B8\'D1\'81\'D0\'B8. \par}
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D0\'9D\'D0\'B0\'D0\'BB\'D0\'B0\'D1\'88\'D1\'82\'D1\'83\'D0\'B2\'D0\'B0\'D0\'BD\'D0\'BD\'D1\'8F \'D0\'BF\'D1\'80\'D0\'BE\'D0\'B3\'D1\'80\'D0\'B0\'D0\'BC\'D0\'B8:
\par}
{\tc\tcl3 \v \'D0\'9D\'D0\'B0\'D0\'BB\'D0\'B0\'D1\'88\'D1\'82\'D1\'83\'D0\'B2\'D0\'B0\'D0\'BD\'D0\'BD\'D1\'8F \'D0\'BF\'D1\'80\'D0\'BE\'D0\'B3\'D1\'80\'D0\'B0\'D0\'BC\'D0\'B8:}
\'D0\'9F\'D1\'80\'D0\'BE\'D0\'B3\'D1\'80\'D0\'B0\'D0\'BC\'D0\'B0 \'D0\'BC\'D0\'B0\'D1\'94 \'D0\'BD\'D0\'B0\'D0\'B1\'D1\'96\'D1\'80 \'D0\'BD\'D0\'B0\'D0\'BB\'D0\'B0\'D1\'88\'D1\'82\'D1\'83\'D0\'B2\'D0\'B0\'D0\'BD\'D1\'8C, \'D1\'89\'D0\'BE \'D0\'B4\'D0\'BE\'D0\'B7\'D0\'B2\'D0\'BE\'D0\'BB\'D1\'8F\'D1\'94 \'D0\'B7\'D0\'BC\'D1\'96\'D0\'BD\'D1\'8E\'D0\'B2\'D0\'B0\'D1\'82\'D0\'B8 \'D1\'80\'D0\'BE\'D0\'B7\'D0\'BC\'D1\'96\'D1\'80 \'D1\'82\'D0\'B0 \'D1\'81\'D1\'82\'D0\'B8\'D0\'BB\'D1\'8C \'D1\'88\'D1\'80\'D0\'B8\'D1\'84\'D1\'82\'D1\'83. \par}
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D0\'97\'D0\'B1\'D0\'B5\'D1\'80\'D0\'B5\'D0\'B6\'D0\'B5\'D0\'BD\'D0\'BD\'D1\'8F \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BE\'D0\'BA:
\par}
{\tc\tcl3 \v \'D0\'97\'D0\'B1\'D0\'B5\'D1\'80\'D0\'B5\'D0\'B6\'D0\'B5\'D0\'BD\'D0\'BD\'D1\'8F \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BE\'D0\'BA:}
MyNotesMaker - \'D1\'86\'D0\'B5 \'D1\'96\'D0\'B4\'D0\'B5\'D0\'B0\'D0\'BB\'D1\'8C\'D0\'BD\'D0\'B8\'D0\'B9 \'D1\'96\'D0\'BD\'D1\'81\'D1\'82\'D1\'80\'D1\'83\'D0\'BC\'D0\'B5\'D0\'BD\'D1\'82 \'D0\'B4\'D0\'BB\'D1\'8F \'D1\'82\'D0\'B8\'D1\'85, \'D1\'85\'D1\'82\'D0\'BE \'D1\'88\'D1\'83\'D0\'BA\'D0\'B0\'D1\'94 \'D0\'BF\'D1\'80\'D0\'BE\'D1\'81\'D1\'82\'D0\'B8\'D0\'B9, \'D0\'B5\'D1\'84\'D0\'B5\'D0\'BA\'D1\'82\'D0\'B8\'D0\'B2\'D0\'BD\'D0\'B8\'D0\'B9 \'D1\'82\'D0\'B0 \'D0\'B7\'D1\'80\'D1\'83\'D1\'87\'D0\'BD\'D0\'B8\'D0\'B9 \'D1\'81\'D0\'BF\'D0\'BE\'D1\'81\'D1\'96\'D0\'B1 \'D1\'81\'D1\'82\'D0\'B2\'D0\'BE\'D1\'80\'D1\'8E\'D0\'B2\'D0\'B0\'D1\'82\'D0\'B8 \'D1\'82\'D0\'B0 \'D0\'BE\'D1\'80\'D0\'B3\'D0\'B0\'D0\'BD\'D1\'96\'D0\'B7\'D0\'BE\'D0\'B2\'D1\'83\'D0\'B2\'D0\'B0\'D1\'82\'D0\'B8 \'D1\'81\'D0\'B2\'D0\'BE\'D1\'97 \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BA\'D0\'B8. \par}
\par}
}}
\par \pard\plain 
\par \pard\plain 
\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
UML\par \pard\plain 
{\tc\tcl1 \v UML}
{\xe \v UML}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
 QT Framework + Unit Tests + Doxygen {\f2 https://pvasya.github.io/MyNotesMakerDoxygen/}\par
 \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Hierarchical Index\par \pard\plain 
{\tc \v Hierarchical Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class Hierarchy\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This inheritance list is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
openai::_detail::CategoryAudio\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
openai::_detail::CategoryChat\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
openai::_detail::CategoryCompletion\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
openai::_detail::CategoryEdit\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
openai::_detail::CategoryEmbedding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
openai::_detail::CategoryFile\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
openai::_detail::CategoryFineTune\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
openai::_detail::CategoryImage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAED \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
openai::_detail::CategoryModel\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
openai::_detail::CategoryModeration\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
openai::_detail::FileRequest\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAES \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
openai::_detail::OpenAI\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QDialog
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
HistoryWindow\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SettingsWindow\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QMainWindow
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
MainWindow\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QObject
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Test_MyNotesMaker\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
openai::_detail::Response\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
openai::_detail::Session\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b openai::_detail::CategoryAudio} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b openai::_detail::CategoryChat} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b openai::_detail::CategoryCompletion} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b openai::_detail::CategoryEdit} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b openai::_detail::CategoryEmbedding} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b openai::_detail::CategoryFile} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b openai::_detail::CategoryFineTune} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b openai::_detail::CategoryImage} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAED \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b openai::_detail::CategoryModel} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b openai::_detail::CategoryModeration} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b openai::_detail::FileRequest} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAES \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HistoryWindow} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MainWindow} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b openai::_detail::OpenAI} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b openai::_detail::Response} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b openai::_detail::Session} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SettingsWindow} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Test_MyNotesMaker} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all documented files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b historywindow.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b historywindow.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b main.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b mainwindow.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b mainwindow.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b openai.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b settingswindow.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b settingswindow.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b test_mynotesmaker.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b test_mynotesmaker.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
openai::_detail::CategoryAudio Struct Reference\par \pard\plain 
{\tc\tcl2 \v openai::_detail::CategoryAudio}
{\xe \v openai::_detail::CategoryAudio}
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b transcribe} (Json input)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b translate} (Json input)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CategoryAudio} ({\b OpenAI} &openai)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OpenAI} & {\b openai_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 275} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CategoryAudio\:openai::_detail::CategoryAudio}
{\xe \v openai::_detail::CategoryAudio\:CategoryAudio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
openai::_detail::CategoryAudio::CategoryAudio ({\b OpenAI} &  {\i openai}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 279} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v transcribe\:openai::_detail::CategoryAudio}
{\xe \v openai::_detail::CategoryAudio\:transcribe}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::CategoryAudio::transcribe (Json  {\i input}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 644} of file {\b openai.hpp}.}\par
}
{\xe \v translate\:openai::_detail::CategoryAudio}
{\xe \v openai::_detail::CategoryAudio\:translate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::CategoryAudio::translate (Json  {\i input}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 654} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v openai_\:openai::_detail::CategoryAudio}
{\xe \v openai::_detail::CategoryAudio\:openai_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b OpenAI}& openai::_detail::CategoryAudio::openai_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 282} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
openai.hpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
openai::_detail::CategoryChat Struct Reference\par \pard\plain 
{\tc\tcl2 \v openai::_detail::CategoryChat}
{\xe \v openai::_detail::CategoryChat}
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b create} (Json input)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CategoryChat} ({\b OpenAI} &openai)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OpenAI} & {\b openai_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 264} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CategoryChat\:openai::_detail::CategoryChat}
{\xe \v openai::_detail::CategoryChat\:CategoryChat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
openai::_detail::CategoryChat::CategoryChat ({\b OpenAI} &  {\i openai}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 267} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v create\:openai::_detail::CategoryChat}
{\xe \v openai::_detail::CategoryChat\:create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::CategoryChat::create (Json  {\i input}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 638} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v openai_\:openai::_detail::CategoryChat}
{\xe \v openai::_detail::CategoryChat\:openai_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b OpenAI}& openai::_detail::CategoryChat::openai_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 270} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
openai.hpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
openai::_detail::CategoryCompletion Struct Reference\par \pard\plain 
{\tc\tcl2 \v openai::_detail::CategoryCompletion}
{\xe \v openai::_detail::CategoryCompletion}
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b create} (Json input)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CategoryCompletion} ({\b OpenAI} &openai)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OpenAI} & {\b openai_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 253} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CategoryCompletion\:openai::_detail::CategoryCompletion}
{\xe \v openai::_detail::CategoryCompletion\:CategoryCompletion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
openai::_detail::CategoryCompletion::CategoryCompletion ({\b OpenAI} &  {\i openai}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 256} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v create\:openai::_detail::CategoryCompletion}
{\xe \v openai::_detail::CategoryCompletion\:create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::CategoryCompletion::create (Json  {\i input}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 632} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v openai_\:openai::_detail::CategoryCompletion}
{\xe \v openai::_detail::CategoryCompletion\:openai_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b OpenAI}& openai::_detail::CategoryCompletion::openai_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 259} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
openai.hpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
openai::_detail::CategoryEdit Struct Reference\par \pard\plain 
{\tc\tcl2 \v openai::_detail::CategoryEdit}
{\xe \v openai::_detail::CategoryEdit}
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b create} (Json input)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CategoryEdit} ({\b OpenAI} &openai)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OpenAI} & {\b openai_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 287} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CategoryEdit\:openai::_detail::CategoryEdit}
{\xe \v openai::_detail::CategoryEdit\:CategoryEdit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
openai::_detail::CategoryEdit::CategoryEdit ({\b OpenAI} &  {\i openai}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 290} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v create\:openai::_detail::CategoryEdit}
{\xe \v openai::_detail::CategoryEdit\:create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::CategoryEdit::create (Json  {\i input}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 664} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v openai_\:openai::_detail::CategoryEdit}
{\xe \v openai::_detail::CategoryEdit\:openai_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b OpenAI}& openai::_detail::CategoryEdit::openai_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 293} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
openai.hpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
openai::_detail::CategoryEmbedding Struct Reference\par \pard\plain 
{\tc\tcl2 \v openai::_detail::CategoryEmbedding}
{\xe \v openai::_detail::CategoryEmbedding}
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b create} (Json input)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CategoryEmbedding} ({\b OpenAI} &openai)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OpenAI} & {\b openai_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 312} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CategoryEmbedding\:openai::_detail::CategoryEmbedding}
{\xe \v openai::_detail::CategoryEmbedding\:CategoryEmbedding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
openai::_detail::CategoryEmbedding::CategoryEmbedding ({\b OpenAI} &  {\i openai}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 314} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v create\:openai::_detail::CategoryEmbedding}
{\xe \v openai::_detail::CategoryEmbedding\:create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::CategoryEmbedding::create (Json  {\i input}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 747} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v openai_\:openai::_detail::CategoryEmbedding}
{\xe \v openai::_detail::CategoryEmbedding\:openai_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b OpenAI}& openai::_detail::CategoryEmbedding::openai_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 317} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
openai.hpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
openai::_detail::CategoryFile Struct Reference\par \pard\plain 
{\tc\tcl2 \v openai::_detail::CategoryFile}
{\xe \v openai::_detail::CategoryFile}
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b list} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b upload} (Json input)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b del} (const std::string &file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b retrieve} (const std::string &file_id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b content} (const std::string &file_id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CategoryFile} ({\b OpenAI} &openai)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OpenAI} & {\b openai_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 327} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CategoryFile\:openai::_detail::CategoryFile}
{\xe \v openai::_detail::CategoryFile\:CategoryFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
openai::_detail::CategoryFile::CategoryFile ({\b OpenAI} &  {\i openai}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 334} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v content\:openai::_detail::CategoryFile}
{\xe \v openai::_detail::CategoryFile\:content}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::CategoryFile::content (const std::string &  {\i file_id}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 771} of file {\b openai.hpp}.}\par
}
{\xe \v del\:openai::_detail::CategoryFile}
{\xe \v openai::_detail::CategoryFile\:del}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::CategoryFile::del (const std::string &  {\i file}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 763} of file {\b openai.hpp}.}\par
}
{\xe \v list\:openai::_detail::CategoryFile}
{\xe \v openai::_detail::CategoryFile\:list}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::CategoryFile::list (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 751} of file {\b openai.hpp}.}\par
}
{\xe \v retrieve\:openai::_detail::CategoryFile}
{\xe \v openai::_detail::CategoryFile\:retrieve}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::CategoryFile::retrieve (const std::string &  {\i file_id}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 767} of file {\b openai.hpp}.}\par
}
{\xe \v upload\:openai::_detail::CategoryFile}
{\xe \v openai::_detail::CategoryFile\:upload}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::CategoryFile::upload (Json  {\i input}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 755} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v openai_\:openai::_detail::CategoryFile}
{\xe \v openai::_detail::CategoryFile\:openai_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b OpenAI}& openai::_detail::CategoryFile::openai_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 337} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
openai.hpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
openai::_detail::CategoryFineTune Struct Reference\par \pard\plain 
{\tc\tcl2 \v openai::_detail::CategoryFineTune}
{\xe \v openai::_detail::CategoryFineTune}
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b create} (Json input)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b list} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b retrieve} (const std::string &fine_tune_id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b content} (const std::string &fine_tune_id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b cancel} (const std::string &fine_tune_id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b events} (const std::string &fine_tune_id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b del} (const std::string &model)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CategoryFineTune} ({\b OpenAI} &openai)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OpenAI} & {\b openai_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 342} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CategoryFineTune\:openai::_detail::CategoryFineTune}
{\xe \v openai::_detail::CategoryFineTune\:CategoryFineTune}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
openai::_detail::CategoryFineTune::CategoryFineTune ({\b OpenAI} &  {\i openai}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 351} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v cancel\:openai::_detail::CategoryFineTune}
{\xe \v openai::_detail::CategoryFineTune\:cancel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::CategoryFineTune::cancel (const std::string &  {\i fine_tune_id}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 791} of file {\b openai.hpp}.}\par
}
{\xe \v content\:openai::_detail::CategoryFineTune}
{\xe \v openai::_detail::CategoryFineTune\:content}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::CategoryFineTune::content (const std::string &  {\i fine_tune_id}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 787} of file {\b openai.hpp}.}\par
}
{\xe \v create\:openai::_detail::CategoryFineTune}
{\xe \v openai::_detail::CategoryFineTune\:create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::CategoryFineTune::create (Json  {\i input}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 775} of file {\b openai.hpp}.}\par
}
{\xe \v del\:openai::_detail::CategoryFineTune}
{\xe \v openai::_detail::CategoryFineTune\:del}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::CategoryFineTune::del (const std::string &  {\i model}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 799} of file {\b openai.hpp}.}\par
}
{\xe \v events\:openai::_detail::CategoryFineTune}
{\xe \v openai::_detail::CategoryFineTune\:events}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::CategoryFineTune::events (const std::string &  {\i fine_tune_id}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 795} of file {\b openai.hpp}.}\par
}
{\xe \v list\:openai::_detail::CategoryFineTune}
{\xe \v openai::_detail::CategoryFineTune\:list}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::CategoryFineTune::list (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 779} of file {\b openai.hpp}.}\par
}
{\xe \v retrieve\:openai::_detail::CategoryFineTune}
{\xe \v openai::_detail::CategoryFineTune\:retrieve}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::CategoryFineTune::retrieve (const std::string &  {\i fine_tune_id}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 783} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v openai_\:openai::_detail::CategoryFineTune}
{\xe \v openai::_detail::CategoryFineTune\:openai_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b OpenAI}& openai::_detail::CategoryFineTune::openai_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 354} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
openai.hpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
openai::_detail::CategoryImage Struct Reference\par \pard\plain 
{\tc\tcl2 \v openai::_detail::CategoryImage}
{\xe \v openai::_detail::CategoryImage}
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b create} (Json input)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b edit} (Json input)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b variation} (Json input)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CategoryImage} ({\b OpenAI} &openai)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OpenAI} & {\b openai_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 299} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CategoryImage\:openai::_detail::CategoryImage}
{\xe \v openai::_detail::CategoryImage\:CategoryImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
openai::_detail::CategoryImage::CategoryImage ({\b OpenAI} &  {\i openai}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 304} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v create\:openai::_detail::CategoryImage}
{\xe \v openai::_detail::CategoryImage\:create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::CategoryImage::create (Json  {\i input}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 670} of file {\b openai.hpp}.}\par
}
{\xe \v edit\:openai::_detail::CategoryImage}
{\xe \v openai::_detail::CategoryImage\:edit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::CategoryImage::edit (Json  {\i input}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 676} of file {\b openai.hpp}.}\par
}
{\xe \v variation\:openai::_detail::CategoryImage}
{\xe \v openai::_detail::CategoryImage\:variation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::CategoryImage::variation (Json  {\i input}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 716} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v openai_\:openai::_detail::CategoryImage}
{\xe \v openai::_detail::CategoryImage\:openai_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b OpenAI}& openai::_detail::CategoryImage::openai_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 307} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
openai.hpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
openai::_detail::CategoryModel Struct Reference\par \pard\plain 
{\tc\tcl2 \v openai::_detail::CategoryModel}
{\xe \v openai::_detail::CategoryModel}
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b list} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b retrieve} (const std::string &model)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CategoryModel} ({\b OpenAI} &openai)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OpenAI} & {\b openai_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 242} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CategoryModel\:openai::_detail::CategoryModel}
{\xe \v openai::_detail::CategoryModel\:CategoryModel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
openai::_detail::CategoryModel::CategoryModel ({\b OpenAI} &  {\i openai}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 246} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v list\:openai::_detail::CategoryModel}
{\xe \v openai::_detail::CategoryModel\:list}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::CategoryModel::list (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 620} of file {\b openai.hpp}.}\par
}
{\xe \v retrieve\:openai::_detail::CategoryModel}
{\xe \v openai::_detail::CategoryModel\:retrieve}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::CategoryModel::retrieve (const std::string &  {\i model}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 626} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v openai_\:openai::_detail::CategoryModel}
{\xe \v openai::_detail::CategoryModel\:openai_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b OpenAI}& openai::_detail::CategoryModel::openai_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 248} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
openai.hpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
openai::_detail::CategoryModeration Struct Reference\par \pard\plain 
{\tc\tcl2 \v openai::_detail::CategoryModeration}
{\xe \v openai::_detail::CategoryModeration}
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b create} (Json input)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CategoryModeration} ({\b OpenAI} &openai)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OpenAI} & {\b openai_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 359} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CategoryModeration\:openai::_detail::CategoryModeration}
{\xe \v openai::_detail::CategoryModeration\:CategoryModeration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
openai::_detail::CategoryModeration::CategoryModeration ({\b OpenAI} &  {\i openai}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 362} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v create\:openai::_detail::CategoryModeration}
{\xe \v openai::_detail::CategoryModeration\:create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::CategoryModeration::create (Json  {\i input}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 803} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v openai_\:openai::_detail::CategoryModeration}
{\xe \v openai::_detail::CategoryModeration\:openai_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b OpenAI}& openai::_detail::CategoryModeration::openai_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 365} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
openai.hpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
openai::_detail::FileRequest Struct Reference\par \pard\plain 
{\tc\tcl2 \v openai::_detail::FileRequest}
{\xe \v openai::_detail::FileRequest}
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b file}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b purpose}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 320} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v file\:openai::_detail::FileRequest}
{\xe \v openai::_detail::FileRequest\:file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string openai::_detail::FileRequest::file}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 321} of file {\b openai.hpp}.}\par
}
{\xe \v purpose\:openai::_detail::FileRequest}
{\xe \v openai::_detail::FileRequest\:purpose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string openai::_detail::FileRequest::purpose}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 322} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
openai.hpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HistoryWindow Class Reference\par \pard\plain 
{\tc\tcl2 \v HistoryWindow}
{\xe \v HistoryWindow}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
Inheritance diagram for HistoryWindow:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_history_window.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Signals\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b open} (QString name, QString text, QFont font){\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HistoryWindow} (QWidget *parent=nullptr)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Slots\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b on_okbtn_clicked} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'97\'D0\'B0\'D0\'BA\'D1\'80\'D0\'B8\'D1\'82\'D1\'82\'D1\'8F \'D0\'B2\'D1\'96\'D0\'BA\'D0\'BD\'D0\'B0 \'D1\'96\'D1\'81\'D1\'82\'D0\'BE\'D1\'80\'D1\'96\'D1\'97 \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BE\'D0\'BA }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b on_deletebtn_clicked} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'92\'D0\'B8\'D0\'B4\'D0\'B0\'D0\'BB\'D0\'B5\'D0\'BD\'D0\'BD\'D1\'8F \'D0\'B2\'D0\'B8\'D0\'B1\'D1\'80\'D0\'B0\'D0\'BD\'D0\'BE\'D0\'B3\'D0\'BE \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BA\'D0\'B0 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b on_openbtn_clicked} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'92\'D1\'96\'D0\'B4\'D0\'BA\'D1\'80\'D0\'B8\'D1\'82\'D1\'82\'D1\'8F \'D0\'B2\'D0\'B8\'D0\'B1\'D1\'80\'D0\'B0\'D0\'BD\'D0\'BE\'D0\'B3\'D0\'BE \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BA\'D0\'B0 \'D0\'BA\'D0\'BD\'D0\'BE\'D0\'BF\'D0\'BA\'D0\'BE\'D1\'8E Open. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b on_listWidget_itemDoubleClicked} (QListWidgetItem *item)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'92\'D1\'96\'D0\'B4\'D0\'BA\'D1\'80\'D0\'B8\'D1\'82\'D1\'82\'D1\'8F \'D0\'B2\'D0\'B8\'D0\'B1\'D1\'80\'D0\'B0\'D0\'BD\'D0\'BE\'D0\'B3\'D0\'BE \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BA\'D0\'B0 \'D0\'BF\'D0\'BE\'D0\'B4\'D0\'B2\'D1\'96\'D0\'B9\'D0\'BD\'D0\'B8\'D0\'BC \'D0\'BD\'D0\'B0\'D1\'82\'D0\'B8\'D1\'81\'D0\'BD\'D0\'B5\'D0\'BD\'D0\'BD\'D1\'8F\'D0\'BC \'D0\'BB\'D1\'96\'D0\'B2\'D0\'BE\'D1\'97 \'D0\'BA\'D0\'BD\'D0\'BE\'D0\'BF\'D0\'BA\'D0\'B8 \'D0\'BC\'D0\'B8\'D1\'88\'D1\'96 }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b openNote} (QListWidgetItem *selectedItem)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'92\'D1\'96\'D0\'B4\'D0\'BA\'D1\'80\'D0\'B8\'D1\'82\'D1\'82\'D1\'8F \'D0\'B2\'D0\'B8\'D0\'B1\'D1\'80\'D0\'B0\'D0\'BD\'D0\'BE\'D0\'B3\'D0\'BE \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BA\'D0\'B0 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mousePressEvent} (QMouseEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mouseMoveEvent} (QMouseEvent *event)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::History * {\b ui}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPoint {\b cur_pos}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPoint {\b new_pos}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 13} of file {\b historywindow.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v HistoryWindow\:HistoryWindow}
{\xe \v HistoryWindow\:HistoryWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HistoryWindow::HistoryWindow (QWidget *  {\i parent} = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b historywindow.cpp}.}\par
}
{\xe \v ~HistoryWindow\:HistoryWindow}
{\xe \v HistoryWindow\:~HistoryWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HistoryWindow::~HistoryWindow ()}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 43} of file {\b historywindow.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v mouseMoveEvent\:HistoryWindow}
{\xe \v HistoryWindow\:mouseMoveEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HistoryWindow::mouseMoveEvent (QMouseEvent *  {\i event}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 147} of file {\b historywindow.cpp}.}\par
}
{\xe \v mousePressEvent\:HistoryWindow}
{\xe \v HistoryWindow\:mousePressEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HistoryWindow::mousePressEvent (QMouseEvent *  {\i event}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 143} of file {\b historywindow.cpp}.}\par
}
{\xe \v on_deletebtn_clicked\:HistoryWindow}
{\xe \v HistoryWindow\:on_deletebtn_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HistoryWindow::on_deletebtn_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'92\'D0\'B8\'D0\'B4\'D0\'B0\'D0\'BB\'D0\'B5\'D0\'BD\'D0\'BD\'D1\'8F \'D0\'B2\'D0\'B8\'D0\'B1\'D1\'80\'D0\'B0\'D0\'BD\'D0\'BE\'D0\'B3\'D0\'BE \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BA\'D0\'B0 }}\par
{
Definition at line {\b 53} of file {\b historywindow.cpp}.}\par
}
{\xe \v on_listWidget_itemDoubleClicked\:HistoryWindow}
{\xe \v HistoryWindow\:on_listWidget_itemDoubleClicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HistoryWindow::on_listWidget_itemDoubleClicked (QListWidgetItem *  {\i item}){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'92\'D1\'96\'D0\'B4\'D0\'BA\'D1\'80\'D0\'B8\'D1\'82\'D1\'82\'D1\'8F \'D0\'B2\'D0\'B8\'D0\'B1\'D1\'80\'D0\'B0\'D0\'BD\'D0\'BE\'D0\'B3\'D0\'BE \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BA\'D0\'B0 \'D0\'BF\'D0\'BE\'D0\'B4\'D0\'B2\'D1\'96\'D0\'B9\'D0\'BD\'D0\'B8\'D0\'BC \'D0\'BD\'D0\'B0\'D1\'82\'D0\'B8\'D1\'81\'D0\'BD\'D0\'B5\'D0\'BD\'D0\'BD\'D1\'8F\'D0\'BC \'D0\'BB\'D1\'96\'D0\'B2\'D0\'BE\'D1\'97 \'D0\'BA\'D0\'BD\'D0\'BE\'D0\'BF\'D0\'BA\'D0\'B8 \'D0\'BC\'D0\'B8\'D1\'88\'D1\'96 }}\par
{
Definition at line {\b 158} of file {\b historywindow.cpp}.}\par
}
{\xe \v on_okbtn_clicked\:HistoryWindow}
{\xe \v HistoryWindow\:on_okbtn_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HistoryWindow::on_okbtn_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'97\'D0\'B0\'D0\'BA\'D1\'80\'D0\'B8\'D1\'82\'D1\'82\'D1\'8F \'D0\'B2\'D1\'96\'D0\'BA\'D0\'BD\'D0\'B0 \'D1\'96\'D1\'81\'D1\'82\'D0\'BE\'D1\'80\'D1\'96\'D1\'97 \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BE\'D0\'BA }}\par
{
Definition at line {\b 48} of file {\b historywindow.cpp}.}\par
}
{\xe \v on_openbtn_clicked\:HistoryWindow}
{\xe \v HistoryWindow\:on_openbtn_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HistoryWindow::on_openbtn_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'92\'D1\'96\'D0\'B4\'D0\'BA\'D1\'80\'D0\'B8\'D1\'82\'D1\'82\'D1\'8F \'D0\'B2\'D0\'B8\'D0\'B1\'D1\'80\'D0\'B0\'D0\'BD\'D0\'BE\'D0\'B3\'D0\'BE \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BA\'D0\'B0 \'D0\'BA\'D0\'BD\'D0\'BE\'D0\'BF\'D0\'BA\'D0\'BE\'D1\'8E Open. }}\par
{
Definition at line {\b 153} of file {\b historywindow.cpp}.}\par
}
{\xe \v openNote\:HistoryWindow}
{\xe \v HistoryWindow\:openNote}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HistoryWindow::openNote (QListWidgetItem *  {\i selectedItem}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'92\'D1\'96\'D0\'B4\'D0\'BA\'D1\'80\'D0\'B8\'D1\'82\'D1\'82\'D1\'8F \'D0\'B2\'D0\'B8\'D0\'B1\'D1\'80\'D0\'B0\'D0\'BD\'D0\'BE\'D0\'B3\'D0\'BE \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BA\'D0\'B0 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    {\cf18 void} HistoryWindow::openNote(QListWidgetItem* selectedItem) \{\par
        {\cf19 if} (selectedItem) \{\par
            QString itemName = selectedItem->text();\par
\par
            nlohmann::json data;\par
            QString filePath = QDir::homePath() + {\cf22 "/Desktop/mynotesmaker.json"};\par
\par
            {\cf19 if} (QFile::exists(filePath)) \{\par
                QFile existingFile(filePath);\par
                {\cf19 if} (existingFile.open(QFile::ReadOnly | QFile::Text)) \{\par
                    QTextStream in(&existingFile);\par
                    QString jsonString = in.readAll();\par
                    existingFile.close();\par
                    {\cf19 try} \{\par
                        data = nlohmann::json::parse(jsonString.toStdString());\par
                    \} {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
                        qWarning() << {\cf22 "Error parsing JSON: "} << e.what();\par
                    \}\par
                    {\cf19 for} ({\cf17 const} {\cf17 auto}& item : data) \{\par
                        {\cf19 if} (QString::fromStdString(item[{\cf22 "name"}]) == itemName) \{\par
                            QString name = QString::fromStdString(item[{\cf22 "name"}]);\par
                            QString text = QString::fromStdString(item[{\cf22 "text"}]);\par
                            QString fontString = QString::fromStdString(item[{\cf22 "font"}]);\par
                            QFont font;\par
                            font.fromString(fontString);\par
                            emit open(name,text,font);\par
                            close();\par
                            {\cf19 break};\par
                        \}\par
                    \}\par
                \} {\cf19 else} \{\par
                    qWarning() << {\cf22 "Error"};\par
                \}\par
            \}\par
        \}\par
\}\par
}
 \par
}{
Definition at line {\b 106} of file {\b historywindow.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v cur_pos\:HistoryWindow}
{\xe \v HistoryWindow\:cur_pos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPoint HistoryWindow::cur_pos{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 87} of file {\b historywindow.h}.}\par
}
{\xe \v new_pos\:HistoryWindow}
{\xe \v HistoryWindow\:new_pos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPoint HistoryWindow::new_pos{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 88} of file {\b historywindow.h}.}\par
}
{\xe \v ui\:HistoryWindow}
{\xe \v HistoryWindow\:ui}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::History* HistoryWindow::ui{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b historywindow.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
historywindow.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
historywindow.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MainWindow Class Reference\par \pard\plain 
{\tc\tcl2 \v MainWindow}
{\xe \v MainWindow}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
Inheritance diagram for MainWindow:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_main_window.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Slots\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b slot} (QString name, QString text, QFont font)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MainWindow} (QWidget *parent=nullptr)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Slots\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b on_closebtn_clicked} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'97\'D0\'B0\'D0\'BA\'D1\'80\'D0\'B8\'D1\'82\'D1\'82\'D1\'8F \'D0\'BF\'D1\'80\'D0\'BE\'D0\'B3\'D1\'80\'D0\'B0\'D0\'BC\'D0\'B8 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b on_settingsbtn_clicked} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'92\'D1\'96\'D0\'B4\'D0\'BA\'D1\'80\'D0\'B8\'D1\'82\'D1\'82\'D1\'8F \'D0\'BD\'D0\'B0\'D0\'BB\'D0\'B0\'D1\'88\'D1\'82\'D1\'83\'D0\'B2\'D0\'B0\'D0\'BD\'D1\'8C \'D0\'BF\'D1\'80\'D0\'BE\'D0\'B3\'D1\'80\'D0\'B0\'D0\'BC\'D0\'B8 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b on_historbtn_clicked} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'92\'D1\'96\'D0\'B4\'D0\'BA\'D1\'80\'D0\'B8\'D1\'82\'D1\'82\'D1\'8F \'D1\'96\'D1\'81\'D1\'82\'D0\'BE\'D1\'80\'D1\'96\'D1\'97 \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BA\'D1\'96\'D0\'B2 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b on_toolsbtn_clicked} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'97\'D0\'BC\'D1\'96\'D0\'BD\'D0\'B0 \'D1\'88\'D1\'80\'D0\'B8\'D1\'84\'D1\'82\'D1\'83 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b on_newbtn_clicked} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'92\'D1\'96\'D0\'B4\'D0\'BA\'D1\'80\'D0\'B8\'D1\'82\'D1\'82\'D1\'8F \'D0\'BD\'D0\'BE\'D0\'B2\'D0\'BE\'D0\'B3\'D0\'BE \'D0\'B2\'D1\'96\'D0\'BA\'D0\'BD\'D0\'B0 \'D0\'BF\'D1\'80\'D0\'BE\'D0\'B3\'D1\'80\'D0\'B0\'D0\'BC\'D0\'B8 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b on_hidebtn_clicked} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'9F\'D1\'80\'D0\'B8\'D1\'85\'D0\'BE\'D0\'B2\'D0\'B0\'D1\'82\'D0\'B8 \'D0\'B2\'D1\'96\'D0\'BA\'D0\'BD\'D0\'BE \'D0\'BF\'D1\'80\'D0\'BE\'D0\'B3\'D1\'80\'D0\'B0\'D0\'BC\'D0\'B8 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b on_pinbtn_clicked} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'97\'D0\'B0\'D0\'BA\'D1\'80\'D1\'96\'D0\'BF\'D0\'B8\'D1\'82\'D0\'B8 \'D0\'B2\'D1\'96\'D0\'BA\'D0\'BD\'D0\'BE \'D0\'BF\'D1\'80\'D0\'BE\'D0\'B3\'D1\'80\'D0\'B0\'D0\'BC\'D0\'B8 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b on_savebtn_clicked} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'97\'D0\'B1\'D0\'B5\'D1\'80\'D0\'B5\'D0\'B3\'D1\'82\'D0\'B8 \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BA\'D1\'83 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b on_gptbtn_1_clicked} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'97\'D0\'B0\'D0\'BF\'D0\'B8\'D1\'82 \'D0\'B4\'D0\'BE OpenAI, \'D0\'BE\'D1\'87\'D1\'96\'D0\'BA\'D1\'83\'D1\'94\'D1\'82\'D1\'8C\'D1\'81\'D1\'8F \'D0\'B2\'D1\'96\'D0\'B4\'D0\'BF\'D0\'BE\'D0\'B2\'D1\'96\'D0\'B4\'D1\'8C \'D0\'BD\'D0\'B0 \'D0\'B7\'D0\'B0\'D0\'BF\'D0\'B8\'D1\'82 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b on_gptbtn_2_clicked} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'97\'D0\'B0\'D0\'BF\'D0\'B8\'D1\'82 \'D0\'B4\'D0\'BE OpenAI, \'D0\'BE\'D1\'87\'D1\'96\'D0\'BA\'D1\'83\'D1\'94\'D1\'82\'D1\'8C\'D1\'81\'D1\'8F \'D0\'BF\'D0\'BE\'D0\'BB\'D1\'96\'D0\'BF\'D1\'88\'D0\'B5\'D0\'BD\'D0\'BD\'D1\'8F \'D1\'82\'D0\'B5\'D0\'BA\'D1\'81\'D1\'82\'D1\'83 \'D0\'B2\'D0\'B2\'D0\'B5\'D0\'B4\'D0\'B5\'D0\'BD\'D0\'BE\'D0\'B3\'D0\'BE \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BA\'D0\'B0 }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b gpt} (QString text, QString key)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'97\'D0\'B0\'D0\'BF\'D0\'B8\'D1\'82 \'D0\'B4\'D0\'BE OpenAI. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mousePressEvent} (QMouseEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mouseMoveEvent} (QMouseEvent *event)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b OpenAIKey}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::MainWindow * {\b ui}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPoint {\b cur_pos}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPoint {\b new_pos}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 32} of file {\b mainwindow.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v MainWindow\:MainWindow}
{\xe \v MainWindow\:MainWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MainWindow::MainWindow (QWidget *  {\i parent} = {\f2 nullptr})}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b mainwindow.cpp}.}\par
}
{\xe \v ~MainWindow\:MainWindow}
{\xe \v MainWindow\:~MainWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MainWindow::~MainWindow ()}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b mainwindow.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v gpt\:MainWindow}
{\xe \v MainWindow\:gpt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::gpt (QString  {\i text}, QString  {\i key}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'97\'D0\'B0\'D0\'BF\'D0\'B8\'D1\'82 \'D0\'B4\'D0\'BE OpenAI. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i text} \cell }{- \'D1\'82\'D0\'B5\'D0\'BA\'D1\'81\'D1\'82 \'D0\'B2\'D0\'B2\'D0\'B5\'D0\'B4\'D0\'B5\'D0\'BD\'D0\'B8\'D0\'B9 \'D0\'BA\'D0\'BE\'D1\'80\'D0\'B8\'D1\'81\'D1\'82\'D1\'83\'D0\'B2\'D0\'B0\'D1\'87\'D0\'B5\'D0\'BC \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key} \cell }{- OpenAI \'D0\'BA\'D0\'BB\'D1\'8E\'D1\'87 {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf18 void} MainWindow::gpt(QString text, QString key)\{\par
     openai::start(key.toStdString());\par
     std::string req = text.toStdString() + ui->plainTextEdit->toPlainText().toStdString();\par
     nlohmann::json jsonRequest;\par
     QSettings settings(QDir::homePath()+ {\cf22 "/Desktop/mynotesmaker settings.ini"}, QSettings::IniFormat);\par
     jsonRequest[{\cf22 "model"}] = settings.value({\cf22 "GPT version"}, QString({\cf22 "gpt-3.5-turbo"})).toString().toStdString();\par
     jsonRequest[{\cf22 "messages"}] = \{\par
         \{\{{\cf22 "role"}, {\cf22 "user"}\}, \{{\cf22 "content"}, req\}\}\par
     \};\par
     jsonRequest[{\cf22 "max_tokens"}] = 300;\par
     jsonRequest[{\cf22 "temperature"}] = 0;\par
     {\cf17 auto} chat = openai::chat().create(jsonRequest);\par
     ui->plainTextEdit->setPlainText(QString::fromStdString(chat[{\cf22 "choices"}][0][{\cf22 "message"}][{\cf22 "content"}].get<std::string>()));\par
 \}\par
}
 \cell }
{\row }
}
}{
Definition at line {\b 168} of file {\b mainwindow.cpp}.}\par
}
{\xe \v mouseMoveEvent\:MainWindow}
{\xe \v MainWindow\:mouseMoveEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::mouseMoveEvent (QMouseEvent *  {\i event}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 35} of file {\b mainwindow.cpp}.}\par
}
{\xe \v mousePressEvent\:MainWindow}
{\xe \v MainWindow\:mousePressEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::mousePressEvent (QMouseEvent *  {\i event}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 31} of file {\b mainwindow.cpp}.}\par
}
{\xe \v on_closebtn_clicked\:MainWindow}
{\xe \v MainWindow\:on_closebtn_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::on_closebtn_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'97\'D0\'B0\'D0\'BA\'D1\'80\'D0\'B8\'D1\'82\'D1\'82\'D1\'8F \'D0\'BF\'D1\'80\'D0\'BE\'D0\'B3\'D1\'80\'D0\'B0\'D0\'BC\'D0\'B8 }}\par
{
Definition at line {\b 41} of file {\b mainwindow.cpp}.}\par
}
{\xe \v on_gptbtn_1_clicked\:MainWindow}
{\xe \v MainWindow\:on_gptbtn_1_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::on_gptbtn_1_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'97\'D0\'B0\'D0\'BF\'D0\'B8\'D1\'82 \'D0\'B4\'D0\'BE OpenAI, \'D0\'BE\'D1\'87\'D1\'96\'D0\'BA\'D1\'83\'D1\'94\'D1\'82\'D1\'8C\'D1\'81\'D1\'8F \'D0\'B2\'D1\'96\'D0\'B4\'D0\'BF\'D0\'BE\'D0\'B2\'D1\'96\'D0\'B4\'D1\'8C \'D0\'BD\'D0\'B0 \'D0\'B7\'D0\'B0\'D0\'BF\'D0\'B8\'D1\'82 }}\par
{
Definition at line {\b 183} of file {\b mainwindow.cpp}.}\par
}
{\xe \v on_gptbtn_2_clicked\:MainWindow}
{\xe \v MainWindow\:on_gptbtn_2_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::on_gptbtn_2_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'97\'D0\'B0\'D0\'BF\'D0\'B8\'D1\'82 \'D0\'B4\'D0\'BE OpenAI, \'D0\'BE\'D1\'87\'D1\'96\'D0\'BA\'D1\'83\'D1\'94\'D1\'82\'D1\'8C\'D1\'81\'D1\'8F \'D0\'BF\'D0\'BE\'D0\'BB\'D1\'96\'D0\'BF\'D1\'88\'D0\'B5\'D0\'BD\'D0\'BD\'D1\'8F \'D1\'82\'D0\'B5\'D0\'BA\'D1\'81\'D1\'82\'D1\'83 \'D0\'B2\'D0\'B2\'D0\'B5\'D0\'B4\'D0\'B5\'D0\'BD\'D0\'BE\'D0\'B3\'D0\'BE \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BA\'D0\'B0 }}\par
{
Definition at line {\b 189} of file {\b mainwindow.cpp}.}\par
}
{\xe \v on_hidebtn_clicked\:MainWindow}
{\xe \v MainWindow\:on_hidebtn_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::on_hidebtn_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'9F\'D1\'80\'D0\'B8\'D1\'85\'D0\'BE\'D0\'B2\'D0\'B0\'D1\'82\'D0\'B8 \'D0\'B2\'D1\'96\'D0\'BA\'D0\'BD\'D0\'BE \'D0\'BF\'D1\'80\'D0\'BE\'D0\'B3\'D1\'80\'D0\'B0\'D0\'BC\'D0\'B8 }}\par
{
Definition at line {\b 84} of file {\b mainwindow.cpp}.}\par
}
{\xe \v on_historbtn_clicked\:MainWindow}
{\xe \v MainWindow\:on_historbtn_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::on_historbtn_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'92\'D1\'96\'D0\'B4\'D0\'BA\'D1\'80\'D0\'B8\'D1\'82\'D1\'82\'D1\'8F \'D1\'96\'D1\'81\'D1\'82\'D0\'BE\'D1\'80\'D1\'96\'D1\'97 \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BA\'D1\'96\'D0\'B2 }}\par
{
Definition at line {\b 57} of file {\b mainwindow.cpp}.}\par
}
{\xe \v on_newbtn_clicked\:MainWindow}
{\xe \v MainWindow\:on_newbtn_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::on_newbtn_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'92\'D1\'96\'D0\'B4\'D0\'BA\'D1\'80\'D0\'B8\'D1\'82\'D1\'82\'D1\'8F \'D0\'BD\'D0\'BE\'D0\'B2\'D0\'BE\'D0\'B3\'D0\'BE \'D0\'B2\'D1\'96\'D0\'BA\'D0\'BD\'D0\'B0 \'D0\'BF\'D1\'80\'D0\'BE\'D0\'B3\'D1\'80\'D0\'B0\'D0\'BC\'D0\'B8 }}\par
{
Definition at line {\b 76} of file {\b mainwindow.cpp}.}\par
}
{\xe \v on_pinbtn_clicked\:MainWindow}
{\xe \v MainWindow\:on_pinbtn_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::on_pinbtn_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'97\'D0\'B0\'D0\'BA\'D1\'80\'D1\'96\'D0\'BF\'D0\'B8\'D1\'82\'D0\'B8 \'D0\'B2\'D1\'96\'D0\'BA\'D0\'BD\'D0\'BE \'D0\'BF\'D1\'80\'D0\'BE\'D0\'B3\'D1\'80\'D0\'B0\'D0\'BC\'D0\'B8 }}\par
{
Definition at line {\b 155} of file {\b mainwindow.cpp}.}\par
}
{\xe \v on_savebtn_clicked\:MainWindow}
{\xe \v MainWindow\:on_savebtn_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::on_savebtn_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'97\'D0\'B1\'D0\'B5\'D1\'80\'D0\'B5\'D0\'B3\'D1\'82\'D0\'B8 \'D0\'BD\'D0\'BE\'D1\'82\'D0\'B0\'D1\'82\'D0\'BA\'D1\'83 }}\par
{
Definition at line {\b 89} of file {\b mainwindow.cpp}.}\par
}
{\xe \v on_settingsbtn_clicked\:MainWindow}
{\xe \v MainWindow\:on_settingsbtn_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::on_settingsbtn_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'92\'D1\'96\'D0\'B4\'D0\'BA\'D1\'80\'D0\'B8\'D1\'82\'D1\'82\'D1\'8F \'D0\'BD\'D0\'B0\'D0\'BB\'D0\'B0\'D1\'88\'D1\'82\'D1\'83\'D0\'B2\'D0\'B0\'D0\'BD\'D1\'8C \'D0\'BF\'D1\'80\'D0\'BE\'D0\'B3\'D1\'80\'D0\'B0\'D0\'BC\'D0\'B8 }}\par
{
Definition at line {\b 47} of file {\b mainwindow.cpp}.}\par
}
{\xe \v on_toolsbtn_clicked\:MainWindow}
{\xe \v MainWindow\:on_toolsbtn_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::on_toolsbtn_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'97\'D0\'BC\'D1\'96\'D0\'BD\'D0\'B0 \'D1\'88\'D1\'80\'D0\'B8\'D1\'84\'D1\'82\'D1\'83 }}\par
{
Definition at line {\b 67} of file {\b mainwindow.cpp}.}\par
}
{\xe \v slot\:MainWindow}
{\xe \v MainWindow\:slot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::slot (QString  {\i name}, QString  {\i text}, QFont  {\i font}){\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 194} of file {\b mainwindow.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v cur_pos\:MainWindow}
{\xe \v MainWindow\:cur_pos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPoint MainWindow::cur_pos{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 118} of file {\b mainwindow.h}.}\par
}
{\xe \v new_pos\:MainWindow}
{\xe \v MainWindow\:new_pos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPoint MainWindow::new_pos{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 119} of file {\b mainwindow.h}.}\par
}
{\xe \v OpenAIKey\:MainWindow}
{\xe \v MainWindow\:OpenAIKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString MainWindow::OpenAIKey{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b mainwindow.h}.}\par
}
{\xe \v ui\:MainWindow}
{\xe \v MainWindow\:ui}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::MainWindow* MainWindow::ui{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 91} of file {\b mainwindow.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
mainwindow.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
mainwindow.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
openai::_detail::OpenAI Class Reference\par \pard\plain 
{\tc\tcl2 \v openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI}
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OpenAI} (const std::string &token="", const std::string &organization="", bool throw_exception=true, const std::string &api_base_url="")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b OpenAI} (const {\b OpenAI} &)=delete{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b OpenAI} & {\b operator=} (const {\b OpenAI} &)=delete{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b OpenAI} ({\b OpenAI} &&)=delete{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b OpenAI} & {\b operator=} ({\b OpenAI} &&)=delete{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setProxy} (const std::string &url)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setThrowException} (bool throw_exception)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMultiformPart} (const std::pair< std::string, std::string > &filefield_and_filepath, const std::map< std::string, std::string > &fields)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b post} (const std::string &suffix, const std::string &data, const std::string &contentType)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b get} (const std::string &suffix, const std::string &data="")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b post} (const std::string &suffix, const Json &json, const std::string &contentType="application/json")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Json {\b del} (const std::string &suffix)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b easyEscape} (const std::string &text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b debug} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBaseUrl} (const std::string &url)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getBaseUrl} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CategoryModel} {\b model} \{*this\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CategoryCompletion} {\b completion} \{*this\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CategoryEdit} {\b edit} \{*this\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CategoryImage} {\b image} \{*this\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CategoryEmbedding} {\b embedding} \{*this\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CategoryFile} {\b file} \{*this\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CategoryFineTune} {\b fine_tune} \{*this\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CategoryModeration} {\b moderation} \{*this\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CategoryChat} {\b chat} \{*this\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CategoryAudio} {\b audio} \{*this\}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParameters} (const std::string &suffix, const std::string &data, const std::string &contentType="")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b checkResponse} (const Json &json)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isJson} (const std::string &data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b trigger_error} (const std::string &msg)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b base_url}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Session} {\b session_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b token_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b organization_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b throw_exception_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 370} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v OpenAI\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:OpenAI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
openai::_detail::OpenAI::OpenAI (const std::string &  {\i token} = {\f2 ""}, const std::string &  {\i organization} = {\f2 ""}, bool  {\i throw_exception} = {\f2 true}, const std::string &  {\i api_base_url} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 372} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v checkResponse\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:checkResponse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void openai::_detail::OpenAI::checkResponse (const Json &  {\i json}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 499} of file {\b openai.hpp}.}\par
}
{\xe \v debug\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:debug}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void openai::_detail::OpenAI::debug () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 473} of file {\b openai.hpp}.}\par
}
{\xe \v del\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:del}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::OpenAI::del (const std::string &  {\i suffix}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 452} of file {\b openai.hpp}.}\par
}
{\xe \v easyEscape\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:easyEscape}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string openai::_detail::OpenAI::easyEscape (const std::string &  {\i text}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 471} of file {\b openai.hpp}.}\par
}
{\xe \v get\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:get}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::OpenAI::get (const std::string &  {\i suffix}, const std::string &  {\i data} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 429} of file {\b openai.hpp}.}\par
}
{\xe \v getBaseUrl\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:getBaseUrl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string openai::_detail::OpenAI::getBaseUrl () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 479} of file {\b openai.hpp}.}\par
}
{\xe \v isJson\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:isJson}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool openai::_detail::OpenAI::isJson (const std::string &  {\i data}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 511} of file {\b openai.hpp}.}\par
}
{\xe \v post\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:post}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::OpenAI::post (const std::string &  {\i suffix}, const Json &  {\i json}, const std::string &  {\i contentType} = {\f2 "application/json"}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 448} of file {\b openai.hpp}.}\par
}
{\xe \v post\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:post}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json openai::_detail::OpenAI::post (const std::string &  {\i suffix}, const std::string &  {\i data}, const std::string &  {\i contentType}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 406} of file {\b openai.hpp}.}\par
}
{\xe \v setBaseUrl\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:setBaseUrl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void openai::_detail::OpenAI::setBaseUrl (const std::string &  {\i url}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 475} of file {\b openai.hpp}.}\par
}
{\xe \v setMultiformPart\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:setMultiformPart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void openai::_detail::OpenAI::setMultiformPart (const std::pair< std::string, std::string > &  {\i filefield_and_filepath}, const std::map< std::string, std::string > &  {\i fields}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 404} of file {\b openai.hpp}.}\par
}
{\xe \v setParameters\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:setParameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void openai::_detail::OpenAI::setParameters (const std::string &  {\i suffix}, const std::string &  {\i data}, const std::string &  {\i contentType} = {\f2 ""}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 486} of file {\b openai.hpp}.}\par
}
{\xe \v setProxy\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:setProxy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void openai::_detail::OpenAI::setProxy (const std::string &  {\i url}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 399} of file {\b openai.hpp}.}\par
}
{\xe \v setThrowException\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:setThrowException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void openai::_detail::OpenAI::setThrowException (bool  {\i throw_exception}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 402} of file {\b openai.hpp}.}\par
}
{\xe \v trigger_error\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:trigger_error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void openai::_detail::OpenAI::trigger_error (const std::string &  {\i msg}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 522} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v audio\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:audio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CategoryAudio} openai::_detail::OpenAI::audio \{*this\}}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 541} of file {\b openai.hpp}.}\par
}
{\xe \v base_url\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:base_url}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string openai::_detail::OpenAI::base_url{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 484} of file {\b openai.hpp}.}\par
}
{\xe \v chat\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:chat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CategoryChat} openai::_detail::OpenAI::chat \{*this\}}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 540} of file {\b openai.hpp}.}\par
}
{\xe \v completion\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:completion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CategoryCompletion} openai::_detail::OpenAI::completion \{*this\}}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 533} of file {\b openai.hpp}.}\par
}
{\xe \v edit\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:edit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CategoryEdit} openai::_detail::OpenAI::edit \{*this\}}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 534} of file {\b openai.hpp}.}\par
}
{\xe \v embedding\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:embedding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CategoryEmbedding} openai::_detail::OpenAI::embedding \{*this\}}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 536} of file {\b openai.hpp}.}\par
}
{\xe \v file\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CategoryFile} openai::_detail::OpenAI::file \{*this\}}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 537} of file {\b openai.hpp}.}\par
}
{\xe \v fine_tune\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:fine_tune}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CategoryFineTune} openai::_detail::OpenAI::fine_tune \{*this\}}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 538} of file {\b openai.hpp}.}\par
}
{\xe \v image\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:image}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CategoryImage} openai::_detail::OpenAI::image \{*this\}}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 535} of file {\b openai.hpp}.}\par
}
{\xe \v model\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:model}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CategoryModel} openai::_detail::OpenAI::model \{*this\}}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 532} of file {\b openai.hpp}.}\par
}
{\xe \v moderation\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:moderation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CategoryModeration} openai::_detail::OpenAI::moderation \{*this\}}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 539} of file {\b openai.hpp}.}\par
}
{\xe \v organization_\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:organization_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string openai::_detail::OpenAI::organization_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 547} of file {\b openai.hpp}.}\par
}
{\xe \v session_\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:session_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Session} openai::_detail::OpenAI::session_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 545} of file {\b openai.hpp}.}\par
}
{\xe \v throw_exception_\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:throw_exception_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool openai::_detail::OpenAI::throw_exception_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 548} of file {\b openai.hpp}.}\par
}
{\xe \v token_\:openai::_detail::OpenAI}
{\xe \v openai::_detail::OpenAI\:token_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string openai::_detail::OpenAI::token_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 546} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
openai.hpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
openai::_detail::Response Struct Reference\par \pard\plain 
{\tc\tcl2 \v openai::_detail::Response}
{\xe \v openai::_detail::Response}
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b text}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_error}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b error_message}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 55} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v error_message\:openai::_detail::Response}
{\xe \v openai::_detail::Response\:error_message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string openai::_detail::Response::error_message}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 58} of file {\b openai.hpp}.}\par
}
{\xe \v is_error\:openai::_detail::Response}
{\xe \v openai::_detail::Response\:is_error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool openai::_detail::Response::is_error}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 57} of file {\b openai.hpp}.}\par
}
{\xe \v text\:openai::_detail::Response}
{\xe \v openai::_detail::Response\:text}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string openai::_detail::Response::text}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 56} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
openai.hpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
openai::_detail::Session Class Reference\par \pard\plain 
{\tc\tcl2 \v openai::_detail::Session}
{\xe \v openai::_detail::Session}
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Session} (bool throw_exception)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Session} (bool throw_exception, std::string proxy_url)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initCurl} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ignoreSSL} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setUrl} (const std::string &url)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setToken} (const std::string &token, const std::string &organization)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setProxyUrl} (const std::string &url)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBody} (const std::string &data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMultiformPart} (const std::pair< std::string, std::string > &filefield_and_filepath, const std::map< std::string, std::string > &fields)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Response} {\b getPrepare} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Response} {\b postPrepare} (const std::string &contentType="")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Response} {\b deletePrepare} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Response} {\b makeRequest} (const std::string &contentType="")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b easyEscape} (const std::string &text)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Private Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static size_t {\b writeFunction} (void *ptr, size_t size, size_t nmemb, std::string *data)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CURL * {\b curl_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CURLcode {\b res_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
curl_mime * {\b mime_form_} = nullptr\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b url_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b proxy_url_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b token_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b organization_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b throw_exception_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::mutex {\b mutex_request_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 62} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Session\:openai::_detail::Session}
{\xe \v openai::_detail::Session\:Session}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
openai::_detail::Session::Session (bool  {\i throw_exception}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 64} of file {\b openai.hpp}.}\par
}
{\xe \v Session\:openai::_detail::Session}
{\xe \v openai::_detail::Session\:Session}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
openai::_detail::Session::Session (bool  {\i throw_exception}, std::string  {\i proxy_url}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 69} of file {\b openai.hpp}.}\par
}
{\xe \v ~Session\:openai::_detail::Session}
{\xe \v openai::_detail::Session\:~Session}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
openai::_detail::Session::~Session (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 75} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v deletePrepare\:openai::_detail::Session}
{\xe \v openai::_detail::Session\:deletePrepare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Response} openai::_detail::Session::deletePrepare (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 180} of file {\b openai.hpp}.}\par
}
{\xe \v easyEscape\:openai::_detail::Session}
{\xe \v openai::_detail::Session\:easyEscape}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string openai::_detail::Session::easyEscape (const std::string &  {\i text}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 230} of file {\b openai.hpp}.}\par
}
{\xe \v getPrepare\:openai::_detail::Session}
{\xe \v openai::_detail::Session\:getPrepare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Response} openai::_detail::Session::getPrepare (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 167} of file {\b openai.hpp}.}\par
}
{\xe \v ignoreSSL\:openai::_detail::Session}
{\xe \v openai::_detail::Session\:ignoreSSL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void openai::_detail::Session::ignoreSSL (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 91} of file {\b openai.hpp}.}\par
}
{\xe \v initCurl\:openai::_detail::Session}
{\xe \v openai::_detail::Session\:initCurl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void openai::_detail::Session::initCurl (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 83} of file {\b openai.hpp}.}\par
}
{\xe \v makeRequest\:openai::_detail::Session}
{\xe \v openai::_detail::Session\:makeRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Response} openai::_detail::Session::makeRequest (const std::string &  {\i contentType} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 189} of file {\b openai.hpp}.}\par
}
{\xe \v postPrepare\:openai::_detail::Session}
{\xe \v openai::_detail::Session\:postPrepare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Response} openai::_detail::Session::postPrepare (const std::string &  {\i contentType} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 176} of file {\b openai.hpp}.}\par
}
{\xe \v setBody\:openai::_detail::Session}
{\xe \v openai::_detail::Session\:setBody}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void openai::_detail::Session::setBody (const std::string &  {\i data}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 135} of file {\b openai.hpp}.}\par
}
{\xe \v setMultiformPart\:openai::_detail::Session}
{\xe \v openai::_detail::Session\:setMultiformPart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void openai::_detail::Session::setMultiformPart (const std::pair< std::string, std::string > &  {\i filefield_and_filepath}, const std::map< std::string, std::string > &  {\i fields}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 142} of file {\b openai.hpp}.}\par
}
{\xe \v setProxyUrl\:openai::_detail::Session}
{\xe \v openai::_detail::Session\:setProxyUrl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void openai::_detail::Session::setProxyUrl (const std::string &  {\i url}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 101} of file {\b openai.hpp}.}\par
}
{\xe \v setToken\:openai::_detail::Session}
{\xe \v openai::_detail::Session\:setToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void openai::_detail::Session::setToken (const std::string &  {\i token}, const std::string &  {\i organization}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 97} of file {\b openai.hpp}.}\par
}
{\xe \v setUrl\:openai::_detail::Session}
{\xe \v openai::_detail::Session\:setUrl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void openai::_detail::Session::setUrl (const std::string &  {\i url}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 95} of file {\b openai.hpp}.}\par
}
{\xe \v writeFunction\:openai::_detail::Session}
{\xe \v openai::_detail::Session\:writeFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static size_t openai::_detail::Session::writeFunction (void *  {\i ptr}, size_t  {\i size}, size_t  {\i nmemb}, std::string *  {\i data}){\f2 [inline]}, {\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 117} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v curl_\:openai::_detail::Session}
{\xe \v openai::_detail::Session\:curl_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CURL* openai::_detail::Session::curl_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 123} of file {\b openai.hpp}.}\par
}
{\xe \v mime_form_\:openai::_detail::Session}
{\xe \v openai::_detail::Session\:mime_form_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
curl_mime* openai::_detail::Session::mime_form_ = nullptr{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 125} of file {\b openai.hpp}.}\par
}
{\xe \v mutex_request_\:openai::_detail::Session}
{\xe \v openai::_detail::Session\:mutex_request_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::mutex openai::_detail::Session::mutex_request_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 132} of file {\b openai.hpp}.}\par
}
{\xe \v organization_\:openai::_detail::Session}
{\xe \v openai::_detail::Session\:organization_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string openai::_detail::Session::organization_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 129} of file {\b openai.hpp}.}\par
}
{\xe \v proxy_url_\:openai::_detail::Session}
{\xe \v openai::_detail::Session\:proxy_url_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string openai::_detail::Session::proxy_url_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 127} of file {\b openai.hpp}.}\par
}
{\xe \v res_\:openai::_detail::Session}
{\xe \v openai::_detail::Session\:res_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CURLcode openai::_detail::Session::res_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 124} of file {\b openai.hpp}.}\par
}
{\xe \v throw_exception_\:openai::_detail::Session}
{\xe \v openai::_detail::Session\:throw_exception_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool openai::_detail::Session::throw_exception_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 131} of file {\b openai.hpp}.}\par
}
{\xe \v token_\:openai::_detail::Session}
{\xe \v openai::_detail::Session\:token_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string openai::_detail::Session::token_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 128} of file {\b openai.hpp}.}\par
}
{\xe \v url_\:openai::_detail::Session}
{\xe \v openai::_detail::Session\:url_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string openai::_detail::Session::url_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 126} of file {\b openai.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
openai.hpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SettingsWindow Class Reference\par \pard\plain 
{\tc\tcl2 \v SettingsWindow}
{\xe \v SettingsWindow}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
Inheritance diagram for SettingsWindow:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_settings_window.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SettingsWindow} (QWidget *parent=nullptr)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Slots\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b on_okbtn_clicked} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'97\'D0\'B0\'D0\'BA\'D1\'80\'D0\'B8\'D1\'82\'D1\'82\'D1\'8F \'D0\'B2\'D1\'96\'D0\'BA\'D0\'BD\'D0\'B0 \'D0\'BD\'D0\'B0\'D0\'BB\'D0\'B0\'D1\'88\'D1\'82\'D1\'83\'D0\'B2\'D0\'B0\'D0\'BD\'D1\'8C }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b on_standartbtn_clicked} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'92\'D0\'B8\'D0\'B1\'D1\'96\'D1\'80 ChatGPT 3.5 Turbo. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b on_probtn_clicked} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'92\'D0\'B8\'D0\'B1\'D1\'96\'D1\'80 ChatGPT 3.5 Turbo 16k. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mousePressEvent} (QMouseEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mouseMoveEvent} (QMouseEvent *event)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::SettingsWindow * {\b ui}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPoint {\b cur_pos}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPoint {\b new_pos}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 12} of file {\b settingswindow.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SettingsWindow\:SettingsWindow}
{\xe \v SettingsWindow\:SettingsWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SettingsWindow::SettingsWindow (QWidget *  {\i parent} = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b settingswindow.cpp}.}\par
}
{\xe \v ~SettingsWindow\:SettingsWindow}
{\xe \v SettingsWindow\:~SettingsWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SettingsWindow::~SettingsWindow ()}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 67} of file {\b settingswindow.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v mouseMoveEvent\:SettingsWindow}
{\xe \v SettingsWindow\:mouseMoveEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SettingsWindow::mouseMoveEvent (QMouseEvent *  {\i event}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 142} of file {\b settingswindow.cpp}.}\par
}
{\xe \v mousePressEvent\:SettingsWindow}
{\xe \v SettingsWindow\:mousePressEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SettingsWindow::mousePressEvent (QMouseEvent *  {\i event}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 138} of file {\b settingswindow.cpp}.}\par
}
{\xe \v on_okbtn_clicked\:SettingsWindow}
{\xe \v SettingsWindow\:on_okbtn_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SettingsWindow::on_okbtn_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'97\'D0\'B0\'D0\'BA\'D1\'80\'D0\'B8\'D1\'82\'D1\'82\'D1\'8F \'D0\'B2\'D1\'96\'D0\'BA\'D0\'BD\'D0\'B0 \'D0\'BD\'D0\'B0\'D0\'BB\'D0\'B0\'D1\'88\'D1\'82\'D1\'83\'D0\'B2\'D0\'B0\'D0\'BD\'D1\'8C }}\par
{
Definition at line {\b 72} of file {\b settingswindow.cpp}.}\par
}
{\xe \v on_probtn_clicked\:SettingsWindow}
{\xe \v SettingsWindow\:on_probtn_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SettingsWindow::on_probtn_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'92\'D0\'B8\'D0\'B1\'D1\'96\'D1\'80 ChatGPT 3.5 Turbo 16k. }}\par
{
Definition at line {\b 107} of file {\b settingswindow.cpp}.}\par
}
{\xe \v on_standartbtn_clicked\:SettingsWindow}
{\xe \v SettingsWindow\:on_standartbtn_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SettingsWindow::on_standartbtn_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'92\'D0\'B8\'D0\'B1\'D1\'96\'D1\'80 ChatGPT 3.5 Turbo. }}\par
{
Definition at line {\b 77} of file {\b settingswindow.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v cur_pos\:SettingsWindow}
{\xe \v SettingsWindow\:cur_pos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPoint SettingsWindow::cur_pos{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 41} of file {\b settingswindow.h}.}\par
}
{\xe \v new_pos\:SettingsWindow}
{\xe \v SettingsWindow\:new_pos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPoint SettingsWindow::new_pos{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 42} of file {\b settingswindow.h}.}\par
}
{\xe \v ui\:SettingsWindow}
{\xe \v SettingsWindow\:ui}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::SettingsWindow* SettingsWindow::ui{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 36} of file {\b settingswindow.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
settingswindow.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
settingswindow.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Test_MyNotesMaker Class Reference\par \pard\plain 
{\tc\tcl2 \v Test_MyNotesMaker}
{\xe \v Test_MyNotesMaker}
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
Inheritance diagram for Test_MyNotesMaker:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_test___my_notes_maker.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Test_MyNotesMaker} (QObject *parent=nullptr)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Slots\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b testMainWindowHideButton} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b testMainWindowPinButton} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b testMainWindowLineEdit} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b testMainWindowPlainTextEdit} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b testMainWindowLineEditEnter} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b testHistoryOpenNote} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b testHistoryDeleteButton} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b testHistoryCancleButton} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 15} of file {\b test_mynotesmaker.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Test_MyNotesMaker\:Test_MyNotesMaker}
{\xe \v Test_MyNotesMaker\:Test_MyNotesMaker}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Test_MyNotesMaker::Test_MyNotesMaker (QObject *  {\i parent} = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 5} of file {\b test_mynotesmaker.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v testHistoryCancleButton\:Test_MyNotesMaker}
{\xe \v Test_MyNotesMaker\:testHistoryCancleButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Test_MyNotesMaker::testHistoryCancleButton (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 167} of file {\b test_mynotesmaker.cpp}.}\par
}
{\xe \v testHistoryDeleteButton\:Test_MyNotesMaker}
{\xe \v Test_MyNotesMaker\:testHistoryDeleteButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Test_MyNotesMaker::testHistoryDeleteButton (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 138} of file {\b test_mynotesmaker.cpp}.}\par
}
{\xe \v testHistoryOpenNote\:Test_MyNotesMaker}
{\xe \v Test_MyNotesMaker\:testHistoryOpenNote}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Test_MyNotesMaker::testHistoryOpenNote (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 121} of file {\b test_mynotesmaker.cpp}.}\par
}
{\xe \v testMainWindowHideButton\:Test_MyNotesMaker}
{\xe \v Test_MyNotesMaker\:testMainWindowHideButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Test_MyNotesMaker::testMainWindowHideButton (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b test_mynotesmaker.cpp}.}\par
}
{\xe \v testMainWindowLineEdit\:Test_MyNotesMaker}
{\xe \v Test_MyNotesMaker\:testMainWindowLineEdit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Test_MyNotesMaker::testMainWindowLineEdit (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 37} of file {\b test_mynotesmaker.cpp}.}\par
}
{\xe \v testMainWindowLineEditEnter\:Test_MyNotesMaker}
{\xe \v Test_MyNotesMaker\:testMainWindowLineEditEnter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Test_MyNotesMaker::testMainWindowLineEditEnter (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 81} of file {\b test_mynotesmaker.cpp}.}\par
}
{\xe \v testMainWindowPinButton\:Test_MyNotesMaker}
{\xe \v Test_MyNotesMaker\:testMainWindowPinButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Test_MyNotesMaker::testMainWindowPinButton (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b test_mynotesmaker.cpp}.}\par
}
{\xe \v testMainWindowPlainTextEdit\:Test_MyNotesMaker}
{\xe \v Test_MyNotesMaker\:testMainWindowPlainTextEdit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Test_MyNotesMaker::testMainWindowPlainTextEdit (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 60} of file {\b test_mynotesmaker.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
test_mynotesmaker.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
test_mynotesmaker.cpp\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
historywindow.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "historywindow.h"}\par
00002 {\cf21 #include "ui_historywindow.h"}\par
00003 {\cf21 #include <QFile>}\par
00004 {\cf21 #include <QDir>}\par
00005 {\cf21 #include <QMessageBox>}\par
00006 {\cf21 #include <QFont>}\par
00007 \par
00008 {\cf21 #include <nlohmann/json.hpp>}\par
00009 {\cf21 #include<QListWidget>}\par
00010 \par
00011 HistoryWindow::HistoryWindow(QWidget *parent) :\par
00012     QDialog(parent),\par
00013     ui(new Ui::History)\par
00014 \{\par
00015     ui->setupUi({\cf17 this});\par
00016 \par
00017     QString filePath = QDir::homePath() + {\cf22 "/Desktop/mynotesmaker.json"};\par
00018     nlohmann::json data;\par
00019     QFile existingFile(filePath);\par
00020     {\cf19 if} (existingFile.open(QFile::ReadOnly | QFile::Text)) \{\par
00021         QTextStream in(&existingFile);\par
00022         QString jsonString = in.readAll();\par
00023         existingFile.close();\par
00024         {\cf19 try} \{\par
00025             data = nlohmann::json::parse(jsonString.toStdString());\par
00026         \} {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
00027             qWarning() << {\cf22 "Error parsing JSON: "} << e.what();\par
00028             {\cf19 return};\par
00029         \}\par
00030     \}\par
00031     {\cf19 else} \{\par
00032         qWarning() << {\cf22 "Error reading the existing file."};\par
00033     \}\par
00034     {\cf19 for} ({\cf17 const} {\cf17 auto}& item : data) \{\par
00035         {\cf19 if} (item.contains({\cf22 "name"})) \{\par
00036             QString name = QString::fromStdString(item[{\cf22 "name"}]);\par
00037             QListWidgetItem* listItem = {\cf17 new} QListWidgetItem(name);\par
00038             ui->listWidget->addItem(listItem);\par
00039         \}\par
00040     \}\par
00041 \}\par
00042 \par
00043 HistoryWindow::~HistoryWindow()\par
00044 \{\par
00045     {\cf17 delete} ui;\par
00046 \}\par
00047 \par
00048 {\cf18 void} HistoryWindow::on_okbtn_clicked()\par
00049 \{\par
00050     close();\par
00051 \}\par
00052 \par
00053 {\cf18 void} HistoryWindow::on_deletebtn_clicked() \{\par
00054     QListWidgetItem* selectedItem = ui->listWidget->currentItem();\par
00055     {\cf19 if} (selectedItem) \{\par
00056         QString itemName = selectedItem->text();\par
00057         QMessageBox msgBoxDelete;\par
00058 \par
00059         msgBoxDelete.setText({\cf22 "Are you sure you want to delete the note?"});\par
00060         msgBoxDelete.setGeometry(this->x(), this->y() + 50, 300, 480);\par
00061         msgBoxDelete.setStyleSheet({\cf22 "background-color: rgb(253, 223, 70);"});\par
00062         msgBoxDelete.setWindowFlags(Qt::FramelessWindowHint | Qt::WindowStaysOnTopHint);\par
00063         msgBoxDelete.setStandardButtons(QMessageBox::Yes);\par
00064         msgBoxDelete.addButton(QMessageBox::No);\par
00065         msgBoxDelete.setDefaultButton(QMessageBox::No);\par
00066         {\cf19 if}(msgBoxDelete.exec() == QMessageBox::Yes)\{\par
00067             {\cf17 delete} selectedItem;\par
00068             QString filePath = QDir::homePath() + {\cf22 "/Desktop/mynotesmaker.json"};\par
00069             nlohmann::json data;\par
00070 \par
00071             {\cf19 if} (QFile::exists(filePath)) \{\par
00072                 QFile file(filePath);\par
00073                 {\cf19 if} (file.open(QFile::ReadOnly | QFile::Text)) \{\par
00074                     QTextStream in(&file);\par
00075                     QString jsonString = in.readAll();\par
00076                     file.close();\par
00077                     {\cf19 try} \{\par
00078                         data = nlohmann::json::parse(jsonString.toStdString());\par
00079                     \} {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
00080                         qWarning() << {\cf22 "Error parsing JSON: "} << e.what();\par
00081                         {\cf19 return};\par
00082                     \}\par
00083 \par
00084                     {\cf19 for} ({\cf17 auto} it = data.begin(); it != data.end(); ++it) \{\par
00085                         {\cf19 if} (QString::fromStdString(it.value()[{\cf22 "name"}]) == itemName) \{\par
00086                             data.erase(it);\par
00087                             {\cf19 break};\par
00088                         \}\par
00089                     \}\par
00090                 \} {\cf19 else} \{\par
00091                     qWarning() << {\cf22 "Error"};\par
00092                 \}\par
00093             \}\par
00094             QFile file(filePath);\par
00095             {\cf19 if} (file.open(QFile::WriteOnly | QFile::Text)) \{\par
00096                 QTextStream out(&file);\par
00097                 out << QString::fromStdString(data.dump());\par
00098                 file.close();\par
00099             \} {\cf19 else} \{\par
00100                 qWarning() << {\cf22 "ERROR saving JSON"};\par
00101             \}\par
00102         \}\par
00103     \}\par
00104 \}\par
00105 \par
00106 {\cf18 void} HistoryWindow::openNote(QListWidgetItem* selectedItem) \{\par
00107     {\cf19 if} (selectedItem) \{\par
00108         QString itemName = selectedItem->text();\par
00109 \par
00110         nlohmann::json data;\par
00111         QString filePath = QDir::homePath() + {\cf22 "/Desktop/mynotesmaker.json"};\par
00112 \par
00113         {\cf19 if} (QFile::exists(filePath)) \{\par
00114             QFile existingFile(filePath);\par
00115             {\cf19 if} (existingFile.open(QFile::ReadOnly | QFile::Text)) \{\par
00116                 QTextStream in(&existingFile);\par
00117                 QString jsonString = in.readAll();\par
00118                 existingFile.close();\par
00119                 {\cf19 try} \{\par
00120                     data = nlohmann::json::parse(jsonString.toStdString());\par
00121                 \} {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
00122                     qWarning() << {\cf22 "Error parsing JSON: "} << e.what();\par
00123                 \}\par
00124                 {\cf19 for} ({\cf17 const} {\cf17 auto}& item : data) \{\par
00125                     {\cf19 if} (QString::fromStdString(item[{\cf22 "name"}]) == itemName) \{\par
00126                         QString name = QString::fromStdString(item[{\cf22 "name"}]);\par
00127                         QString text = QString::fromStdString(item[{\cf22 "text"}]);\par
00128                         QString fontString = QString::fromStdString(item[{\cf22 "font"}]);\par
00129                         QFont font;\par
00130                         font.fromString(fontString);\par
00131                         emit open(name,text,font);\par
00132                         close();\par
00133                         {\cf19 break};\par
00134                     \}\par
00135                 \}\par
00136             \} {\cf19 else} \{\par
00137                 qWarning() << {\cf22 "Error"};\par
00138             \}\par
00139         \}\par
00140     \}\par
00141 \}\par
00142 \par
00143 {\cf18 void} HistoryWindow::mousePressEvent(QMouseEvent *event)\{\par
00144     cur_pos = {\cf17 event}->globalPosition().toPoint();\par
00145 \}\par
00146 \par
00147 {\cf18 void} HistoryWindow::mouseMoveEvent(QMouseEvent *event)\{\par
00148     new_pos = QPoint(event->globalPosition().toPoint() - cur_pos);\par
00149     move(x()+new_pos.x(), y()+new_pos.y());\par
00150     cur_pos = {\cf17 event}->globalPosition().toPoint();\par
00151 \}\par
00152 \par
00153 {\cf18 void} HistoryWindow::on_openbtn_clicked() \{\par
00154     QListWidgetItem* selectedItem = ui->listWidget->currentItem();\par
00155     openNote(selectedItem);\par
00156 \}\par
00157 \par
00158 {\cf18 void} HistoryWindow::on_listWidget_itemDoubleClicked(QListWidgetItem *item)\par
00159 \{\par
00160     QListWidgetItem* selectedItem = item;\par
00161     openNote(selectedItem);\par
00162 \}\par
00163 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
historywindow.h\par \pard\plain 
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef HISTORYWINDOW_H}\par
00002 {\cf21 #define HISTORYWINDOW_H}\par
00003 \par
00004 {\cf21 #include <QDialog>}\par
00005 {\cf21 #include<QListWidget>}\par
00006 {\cf21 #include <QMouseEvent>}\par
00007 {\cf21 #include <QPoint>}\par
00008 \par
00009 {\cf17 namespace }Ui \{\par
00010 {\cf17 class }History;\par
00011 \}\par
00012 \par
00013 {\cf17 class }HistoryWindow : {\cf17 public} QDialog\par
00014 \{\par
00015     Q_OBJECT\par
00016 \par
00017 {\cf17 public}:\par
00018     {\cf17 explicit} HistoryWindow(QWidget *parent = {\cf17 nullptr});\par
00019     ~HistoryWindow();\par
00020 \par
00021 {\cf17 private} slots:\par
00025     {\cf18 void} on_okbtn_clicked();\par
00029     {\cf18 void} on_deletebtn_clicked();\par
00033     {\cf18 void} on_openbtn_clicked();\par
00037     {\cf18 void} on_listWidget_itemDoubleClicked(QListWidgetItem *item);\par
00038 \par
00039 {\cf17 private}:\par
00040     Ui::History *ui;\par
00082     {\cf18 void} openNote(QListWidgetItem* selectedItem);\par
00083 \par
00084     {\cf18 void} mousePressEvent(QMouseEvent *event);\par
00085     {\cf18 void} mouseMoveEvent(QMouseEvent *event);\par
00086 \par
00087     QPoint cur_pos;\par
00088     QPoint new_pos;\par
00089 \par
00090 signals:\par
00091     {\cf18 void} open(QString name, QString text, QFont font);\par
00092 \};\par
00093 \par
00094 {\cf21 #endif }{\cf20 // HISTORYWINDOW_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "mainwindow.h"}\par
00002 {\cf21 #include <QApplication>}\par
00003 {\cf21 #include <QTest>}\par
00004 \par
00005 {\cf21 #ifdef QT_DEBUG}\par
00006 {\cf21 #include "test_mynotesmaker.h"}\par
00007 {\cf21 #endif}\par
00008 \par
00009 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
00010 \{\par
00011     QApplication a(argc, argv);\par
00012     MainWindow mainwin;\par
00013     mainwin.setWindowFlags(Qt::FramelessWindowHint);\par
00014     mainwin.show();\par
00015 \par
00016 \par
00017     {\cf20 // Unit Tests}\par
00018 {\cf21 #ifdef QT_DEBUG}\par
00019     QTest::qExec({\cf17 new} Test_MyNotesMaker);\par
00020 {\cf21 #endif}\par
00021 \par
00022     {\cf19 return} a.exec();\par
00023 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mainwindow.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "mainwindow.h"}\par
00002 {\cf21 #include "ui_mainwindow.h"}\par
00003 {\cf21 #include "settingswindow.h"}\par
00004 {\cf21 #include "historywindow.h"}\par
00005 {\cf21 #include "QFontDialog"}\par
00006 {\cf21 #include <QFile>}\par
00007 {\cf21 #include <QSettings>}\par
00008 {\cf21 #include <QDir>}\par
00009 {\cf21 #include <QMessageBox>}\par
00010 {\cf21 #include <curl/curl.h>}\par
00011 {\cf21 #include "openai.hpp"}\par
00012 {\cf21 #include <nlohmann/json.hpp>}\par
00013 \par
00014 MainWindow::MainWindow(QWidget *parent)\par
00015     : QMainWindow(parent)\par
00016     , ui(new Ui::MainWindow)\par
00017 \{\par
00018     ui->setupUi({\cf17 this});\par
00019 \par
00020     QSettings settings(QDir::homePath()+ {\cf22 "/Desktop/mynotesmaker settings.ini"}, QSettings::IniFormat);\par
00021     restoreGeometry(settings.value({\cf22 "geometry"}).toByteArray());\par
00022 \}\par
00023 \par
00024 MainWindow::~MainWindow()\par
00025 \{\par
00026     QSettings settings(QDir::homePath()+ {\cf22 "/Desktop/mynotesmaker settings.ini"}, QSettings::IniFormat);\par
00027     settings.setValue({\cf22 "geometry"}, saveGeometry());\par
00028     {\cf17 delete} ui;\par
00029 \}\par
00030 \par
00031 {\cf18 void} MainWindow::mousePressEvent(QMouseEvent *event)\{\par
00032     cur_pos = {\cf17 event}->globalPosition().toPoint();\par
00033 \}\par
00034 \par
00035 {\cf18 void} MainWindow::mouseMoveEvent(QMouseEvent *event)\{\par
00036     new_pos = QPoint(event->globalPosition().toPoint() - cur_pos);\par
00037     move(x()+new_pos.x(), y()+new_pos.y());\par
00038     cur_pos = {\cf17 event}->globalPosition().toPoint();\par
00039 \}\par
00040 \par
00041 {\cf18 void} MainWindow::on_closebtn_clicked()\par
00042 \{\par
00043     close();\par
00044 \}\par
00045 \par
00046 \par
00047 {\cf18 void} MainWindow::on_settingsbtn_clicked()\par
00048 \{\par
00049     SettingsWindow *settings = {\cf17 new} SettingsWindow;\par
00050     settings->setWindowFlags(Qt::FramelessWindowHint | Qt::WindowStaysOnTopHint);\par
00051     settings->setModal({\cf17 true});\par
00052     settings->setGeometry(this->x() + 10, this->y() + 35,250,170);\par
00053     settings->show();\par
00054 \}\par
00055 \par
00056 \par
00057 {\cf18 void} MainWindow::on_historbtn_clicked()\par
00058 \{\par
00059     HistoryWindow *historywin = {\cf17 new} HistoryWindow;\par
00060     historywin->setWindowFlags(Qt::FramelessWindowHint | Qt::WindowStaysOnTopHint);\par
00061     historywin->setModal({\cf17 true});\par
00062     historywin->setGeometry(this->x() + 10, this->y() + 35,250,430);\par
00063     historywin->show();\par
00064     connect(historywin, &HistoryWindow::open, {\cf17 this}, &MainWindow::slot);\par
00065 \}\par
00066 \par
00067 {\cf18 void} MainWindow::on_toolsbtn_clicked()\par
00068 \{\par
00069     {\cf18 bool} ok;\par
00070     QFont font = QFontDialog::getFont(&ok ,QFont({\cf22 "Segoe Script"},12),{\cf17 this});\par
00071     {\cf19 if}(ok)\{\par
00072         ui->plainTextEdit->setFont(font);\par
00073     \}\par
00074 \}\par
00075 \par
00076 {\cf18 void} MainWindow::on_newbtn_clicked()\par
00077 \{\par
00078     MainWindow *mainWindow = {\cf17 new} MainWindow();\par
00079     mainWindow->setWindowFlags(Qt::FramelessWindowHint);\par
00080     mainWindow->setGeometry(this->x() + 30, this->y() + 30,300,480);\par
00081     mainWindow->show();\par
00082 \}\par
00083 \par
00084 {\cf18 void} MainWindow::on_hidebtn_clicked()\par
00085 \{\par
00086     showMinimized();\par
00087 \}\par
00088 \par
00089 {\cf18 void} MainWindow::on_savebtn_clicked()\par
00090 \{\par
00091     {\cf19 if} (ui->lineEdit->text().isEmpty()) \{\par
00092         QMessageBox msgBoxEmpty;\par
00093         msgBoxEmpty.setObjectName({\cf22 "msgBox"});\par
00094         msgBoxEmpty.setIcon(QMessageBox::Warning);\par
00095         msgBoxEmpty.setText({\cf22 "Please name the note"});\par
00096         msgBoxEmpty.setGeometry(this->x() + 50, this->y() + 50,300,480);\par
00097         msgBoxEmpty.setStyleSheet({\cf22 "background-color: rgb(253, 223, 70);"});\par
00098         msgBoxEmpty.setWindowFlags(Qt::FramelessWindowHint);\par
00099         msgBoxEmpty.exec();\par
00100         {\cf19 return};\par
00101     \}\par
00102 \par
00103     QString filePath = QDir::homePath() + {\cf22 "/Desktop/mynotesmaker.json"};\par
00104     nlohmann::json data;\par
00105 \par
00106     {\cf19 if} (QFile::exists(filePath)) \{\par
00107         QFile existingFile(filePath);\par
00108         {\cf19 if} (existingFile.open(QFile::ReadOnly | QFile::Text)) \{\par
00109             QTextStream in(&existingFile);\par
00110             QString jsonString = in.readAll();\par
00111             existingFile.close();\par
00112             {\cf19 try} \{\par
00113                 data = nlohmann::json::parse(jsonString.toStdString());\par
00114             \} {\cf19 catch} ({\cf17 const} std::exception& e) \{\par
00115                 qWarning() << {\cf22 "Error parsing JSON: "} << e.what();\par
00116                 {\cf19 return};\par
00117             \}\par
00118             std::string noteName = ui->lineEdit->text().toStdString();\par
00119             {\cf19 for} ({\cf17 const} {\cf17 auto}& note : data) \{\par
00120                 {\cf19 if} (note[{\cf22 "name"}] == noteName) \{\par
00121                     QMessageBox msgBoxSame;\par
00122                     msgBoxSame.setObjectName({\cf22 "msgBox"});\par
00123                     msgBoxSame.setIcon(QMessageBox::Warning);\par
00124                     msgBoxSame.setText({\cf22 "A note with the same name already exists.\\nPlease choose a different name."});\par
00125                     msgBoxSame.setGeometry(this->x(), this->y() + 50, 300, 480);\par
00126                     msgBoxSame.setStyleSheet({\cf22 "background-color: rgb(253, 223, 70);"});\par
00127                     msgBoxSame.setWindowFlags(Qt::FramelessWindowHint);\par
00128                     msgBoxSame.exec();\par
00129                     {\cf19 return};\par
00130                 \}\par
00131             \}\par
00132         \} {\cf19 else} \{\par
00133             qWarning() << {\cf22 "Error reading the existing file."};\par
00134             {\cf19 return};\par
00135         \}\par
00136     \}\par
00137 \par
00138     nlohmann::json note;\par
00139     note[{\cf22 "name"}] = ui->lineEdit->text().toStdString();\par
00140     note[{\cf22 "text"}] = ui->plainTextEdit->toPlainText().toStdString();\par
00141     note[{\cf22 "font"}] = ui->plainTextEdit->font().toString().toStdString();\par
00142 \par
00143     data.push_back(note);\par
00144 \par
00145     QFile file(filePath);\par
00146     {\cf19 if} (file.open(QFile::WriteOnly | QFile::Text)) \{\par
00147         QTextStream out(&file);\par
00148         out << QString::fromStdString(data.dump());\par
00149         file.close();\par
00150     \} {\cf19 else} \{\par
00151         qWarning() << {\cf22 "ERROR"};\par
00152     \}\par
00153 \}\par
00154 \par
00155 {\cf18 void} MainWindow::on_pinbtn_clicked()\par
00156 \{\par
00157     {\cf19 if} (windowFlags() & Qt::WindowStaysOnTopHint) \{\par
00158         setWindowFlags(windowFlags() & ~Qt::WindowStaysOnTopHint);\par
00159         ui->pinbtn->setIcon(QIcon({\cf22 ":/img/pin-removebg.png"}));\par
00160         \}\par
00161     {\cf19 else} \{\par
00162         setWindowFlags(windowFlags() | Qt::WindowStaysOnTopHint);\par
00163         ui->pinbtn->setIcon(QIcon({\cf22 ":/img/unpin-removebg.png"}));\par
00164         \}\par
00165     show();\par
00166 \}\par
00167 \par
00168 {\cf18 void} MainWindow::gpt(QString text, QString key)\{\par
00169     openai::start(key.toStdString());\par
00170     std::string req = text.toStdString() + ui->plainTextEdit->toPlainText().toStdString();\par
00171     nlohmann::json jsonRequest;\par
00172     QSettings settings(QDir::homePath()+ {\cf22 "/Desktop/mynotesmaker settings.ini"}, QSettings::IniFormat);\par
00173     jsonRequest[{\cf22 "model"}] = settings.value({\cf22 "GPT version"}, QString({\cf22 "gpt-3.5-turbo"})).toString().toStdString();\par
00174     jsonRequest[{\cf22 "messages"}] = \{\par
00175         \{\{{\cf22 "role"}, {\cf22 "user"}\}, \{{\cf22 "content"}, req\}\}\par
00176     \};\par
00177     jsonRequest[{\cf22 "max_tokens"}] = 300;\par
00178     jsonRequest[{\cf22 "temperature"}] = 0;\par
00179     {\cf17 auto} chat = openai::chat().create(jsonRequest);\par
00180     ui->plainTextEdit->setPlainText(QString::fromStdString(chat[{\cf22 "choices"}][0][{\cf22 "message"}][{\cf22 "content"}].get<std::string>()));\par
00181 \}\par
00182 \par
00183 {\cf18 void} MainWindow::on_gptbtn_1_clicked()\par
00184 \{\par
00185     gpt({\cf22 ""},{\cf22 ""});\par
00186 \}\par
00187 \par
00188 \par
00189 {\cf18 void} MainWindow::on_gptbtn_2_clicked()\par
00190 \{\par
00191     gpt({\cf22 "Rewrite it correctly, beautifully and give just the text: "},{\cf22 ""});\par
00192 \}\par
00193 \par
00194 {\cf18 void} MainWindow::slot(QString name, QString text, QFont font)\par
00195 \{\par
00196     ui->lineEdit->setText(name);\par
00197     ui->plainTextEdit->setPlainText(text);\par
00198     ui->plainTextEdit->setFont(font);\par
00199 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mainwindow.h\par \pard\plain 
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00020 {\cf21 #ifndef MAINWINDOW_H}\par
00021 {\cf21 #define MAINWINDOW_H}\par
00022 \par
00023 {\cf21 #include <QMainWindow>}\par
00024 {\cf21 #include <QMouseEvent>}\par
00025 {\cf21 #include <QPoint>}\par
00026 {\cf21 #include <QGraphicsScene>}\par
00027 \par
00028 QT_BEGIN_NAMESPACE\par
00029 {\cf17 namespace }Ui \{ {\cf17 class }MainWindow; \}\par
00030 QT_END_NAMESPACE\par
00031 \par
00032 {\cf17 class }MainWindow : {\cf17 public} QMainWindow\par
00033 \{\par
00034     Q_OBJECT\par
00035 \par
00036 {\cf17 public}:\par
00037     MainWindow(QWidget *parent = {\cf17 nullptr});\par
00038     ~MainWindow();\par
00039 {\cf17 private}:\par
00040     QString OpenAIKey;\par
00041 \par
00042 {\cf17 private} slots:\par
00046     {\cf18 void} on_closebtn_clicked();\par
00050     {\cf18 void} on_settingsbtn_clicked();\par
00054     {\cf18 void} on_historbtn_clicked();\par
00058     {\cf18 void} on_toolsbtn_clicked();\par
00062     {\cf18 void} on_newbtn_clicked();\par
00066     {\cf18 void} on_hidebtn_clicked();\par
00070     {\cf18 void} on_pinbtn_clicked();\par
00074     {\cf18 void} on_savebtn_clicked();\par
00075 \par
00079     {\cf18 void} on_gptbtn_1_clicked();\par
00080 \par
00085     {\cf18 void} on_gptbtn_2_clicked();\par
00086 \par
00087 {\cf17 public} slots:\par
00088     {\cf18 void} slot(QString name, QString text, QFont font);\par
00089 \par
00090 {\cf17 private}:\par
00091     Ui::MainWindow *ui;\par
00092 \par
00114     {\cf18 void} gpt(QString text, QString key);\par
00115     {\cf18 void} mousePressEvent(QMouseEvent *event);\par
00116     {\cf18 void} mouseMoveEvent(QMouseEvent *event);\par
00117 \par
00118     QPoint cur_pos;\par
00119     QPoint new_pos;\par
00120 \};\par
00121 \par
00122 {\cf21 #endif }{\cf20 // MAINWINDOW_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
openai.hpp\par \pard\plain 
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // The MIT License (MIT)}\par
00002 {\cf20 //}\par
00003 {\cf20 // Copyright (c) 2023 Olrea, Florian Dang}\par
00004 {\cf20 //}\par
00005 {\cf20 // Permission is hereby granted, free of charge, to any person obtaining a copy}\par
00006 {\cf20 // of this software and associated documentation files (the "Software"), to deal}\par
00007 {\cf20 // in the Software without restriction, including without limitation the rights}\par
00008 {\cf20 // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell}\par
00009 {\cf20 // copies of the Software, and to permit persons to whom the Software is}\par
00010 {\cf20 // furnished to do so, subject to the following conditions:}\par
00011 {\cf20 //}\par
00012 {\cf20 // The above copyright notice and this permission notice shall be included in all}\par
00013 {\cf20 // copies or substantial portions of the Software.}\par
00014 {\cf20 //}\par
00015 {\cf20 // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR}\par
00016 {\cf20 // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,}\par
00017 {\cf20 // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE}\par
00018 {\cf20 // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER}\par
00019 {\cf20 // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,}\par
00020 {\cf20 // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE}\par
00021 {\cf20 // SOFTWARE.}\par
00022 \par
00023 {\cf21 #ifndef OPENAI_HPP_}\par
00024 {\cf21 #define OPENAI_HPP_}\par
00025 \par
00026 \par
00027 {\cf21 #if OPENAI_VERBOSE_OUTPUT}\par
00028 {\cf21 #pragma message ("OPENAI_VERBOSE_OUTPUT is ON")}\par
00029 {\cf21 #endif}\par
00030 \par
00031 {\cf21 #include <iostream>}\par
00032 {\cf21 #include <stdexcept>}\par
00033 {\cf21 #include <string>}\par
00034 {\cf21 #include <vector>}\par
00035 {\cf21 #include <sstream>}\par
00036 {\cf21 #include <mutex>}\par
00037 {\cf21 #include <cstdlib>}\par
00038 {\cf21 #include <map>}\par
00039 \par
00040 {\cf21 #ifndef CURL_STATICLIB}\par
00041 {\cf21 #include <curl/curl.h>}\par
00042 {\cf21 #else}\par
00043 {\cf21 #include "curl/curl.h"}\par
00044 {\cf21 #endif}\par
00045 \par
00046 {\cf21 #include <nlohmann/json.hpp>}  {\cf20 // nlohmann/json}\par
00047 \par
00048 {\cf17 namespace }openai \{\par
00049 \par
00050 {\cf17 namespace }_detail \{\par
00051 \par
00052 {\cf20 // Json alias}\par
00053 {\cf17 using }Json = nlohmann::json;\par
00054 \par
00055 {\cf17 struct }Response \{\par
00056     std::string text;\par
00057     {\cf18 bool}        is_error;\par
00058     std::string error_message;\par
00059 \};\par
00060 \par
00061 {\cf20 // Simple curl Session inspired by CPR}\par
00062 {\cf17 class }Session \{\par
00063 {\cf17 public}:\par
00064     Session({\cf18 bool} throw_exception) : throw_exception_\{throw_exception\} \{\par
00065         initCurl();\par
00066         ignoreSSL();\par
00067     \}\par
00068 \par
00069     Session({\cf18 bool} throw_exception, std::string proxy_url) : throw_exception_\{ throw_exception \} \{\par
00070         initCurl();\par
00071         ignoreSSL();\par
00072         setProxyUrl(proxy_url);\par
00073     \}\par
00074 \par
00075     ~Session() \{\par
00076         curl_easy_cleanup(curl_);\par
00077         curl_global_cleanup();\par
00078         {\cf19 if} (mime_form_ != {\cf17 nullptr}) \{\par
00079             curl_mime_free(mime_form_);\par
00080         \}\par
00081     \}\par
00082 \par
00083     {\cf18 void} initCurl() \{\par
00084         curl_global_init(CURL_GLOBAL_ALL);\par
00085         curl_ = curl_easy_init();\par
00086         {\cf19 if} (curl_ == {\cf17 nullptr}) \{\par
00087             {\cf19 throw} std::runtime_error({\cf22 "curl cannot initialize"}); {\cf20 // here we throw it shouldn't happen}\par
00088         \}\par
00089     \}\par
00090 \par
00091     {\cf18 void} ignoreSSL() \{\par
00092         curl_easy_setopt(curl_, CURLOPT_SSL_VERIFYPEER, 0L);\par
00093     \}\par
00094 \par
00095     {\cf18 void} setUrl({\cf17 const} std::string& url) \{ url_ = url; \}\par
00096 \par
00097     {\cf18 void} setToken({\cf17 const} std::string& token, {\cf17 const} std::string& organization) \{\par
00098         token_ = token;\par
00099         organization_ = organization;\par
00100     \}\par
00101     {\cf18 void} setProxyUrl({\cf17 const} std::string& url) \{\par
00102         proxy_url_ = url;\par
00103         curl_easy_setopt(curl_, CURLOPT_PROXY, proxy_url_.c_str());\par
00104 \par
00105     \}\par
00106 \par
00107     {\cf18 void} setBody({\cf17 const} std::string& data);\par
00108     {\cf18 void} setMultiformPart({\cf17 const} std::pair<std::string, std::string>& filefield_and_filepath, {\cf17 const} std::map<std::string, std::string>& fields);\par
00109 \par
00110     Response getPrepare();\par
00111     Response postPrepare({\cf17 const} std::string& contentType = {\cf22 ""});\par
00112     Response deletePrepare();\par
00113     Response makeRequest({\cf17 const} std::string& contentType = {\cf22 ""});\par
00114     std::string easyEscape({\cf17 const} std::string& text);\par
00115 \par
00116 {\cf17 private}:\par
00117     {\cf17 static} {\cf18 size_t} writeFunction({\cf18 void}* ptr, {\cf18 size_t} size, {\cf18 size_t} nmemb, std::string* data) \{\par
00118         data->append(({\cf18 char}*) ptr, size * nmemb);\par
00119         {\cf19 return} size * nmemb;\par
00120     \}\par
00121 \par
00122 {\cf17 private}:\par
00123     CURL*       curl_;\par
00124     CURLcode    res_;\par
00125     curl_mime   *mime_form_ = {\cf17 nullptr};\par
00126     std::string url_;\par
00127     std::string proxy_url_;\par
00128     std::string token_;\par
00129     std::string organization_;\par
00130 \par
00131     {\cf18 bool}        throw_exception_;\par
00132     std::mutex  mutex_request_;\par
00133 \};\par
00134 \par
00135 {\cf17 inline} {\cf18 void} Session::setBody({\cf17 const} std::string& data) \{\par
00136     {\cf19 if} (curl_) \{\par
00137         curl_easy_setopt(curl_, CURLOPT_POSTFIELDSIZE, data.length());\par
00138         curl_easy_setopt(curl_, CURLOPT_POSTFIELDS, data.data());\par
00139     \}\par
00140 \}\par
00141 \par
00142 {\cf17 inline} {\cf18 void} Session::setMultiformPart({\cf17 const} std::pair<std::string, std::string>& fieldfield_and_filepath, {\cf17 const} std::map<std::string, std::string>& fields) \{\par
00143     {\cf20 // https://curl.se/libcurl/c/curl_mime_init.html}\par
00144     {\cf19 if} (curl_) \{\par
00145         {\cf19 if} (mime_form_ != {\cf17 nullptr}) \{\par
00146             curl_mime_free(mime_form_);\par
00147             mime_form_ = {\cf17 nullptr};\par
00148         \}\par
00149         curl_mimepart *field = {\cf17 nullptr};\par
00150 \par
00151         mime_form_ = curl_mime_init(curl_);\par
00152 \par
00153         field = curl_mime_addpart(mime_form_);\par
00154         curl_mime_name(field, fieldfield_and_filepath.first.c_str());\par
00155         curl_mime_filedata(field, fieldfield_and_filepath.second.c_str());\par
00156 \par
00157         {\cf19 for} ({\cf17 const} {\cf17 auto} &field_pair : fields) \{\par
00158             field = curl_mime_addpart(mime_form_);\par
00159             curl_mime_name(field, field_pair.first.c_str());\par
00160             curl_mime_data(field, field_pair.second.c_str(), CURL_ZERO_TERMINATED);\par
00161         \}\par
00162 \par
00163         curl_easy_setopt(curl_, CURLOPT_MIMEPOST, mime_form_);\par
00164     \}\par
00165 \}\par
00166 \par
00167 {\cf17 inline} Response Session::getPrepare() \{\par
00168     {\cf19 if} (curl_) \{\par
00169         curl_easy_setopt(curl_, CURLOPT_HTTPGET, 1L);\par
00170         curl_easy_setopt(curl_, CURLOPT_POST, 0L);\par
00171         curl_easy_setopt(curl_, CURLOPT_NOBODY, 0L);\par
00172     \}\par
00173     {\cf19 return} makeRequest();\par
00174 \}\par
00175 \par
00176 {\cf17 inline} Response Session::postPrepare({\cf17 const} std::string& contentType) \{\par
00177     {\cf19 return} makeRequest(contentType);\par
00178 \}\par
00179 \par
00180 {\cf17 inline} Response Session::deletePrepare() \{\par
00181     {\cf19 if} (curl_) \{\par
00182         curl_easy_setopt(curl_, CURLOPT_HTTPGET, 0L);\par
00183         curl_easy_setopt(curl_, CURLOPT_NOBODY, 0L);\par
00184         curl_easy_setopt(curl_, CURLOPT_CUSTOMREQUEST, {\cf22 "DELETE"});\par
00185     \}\par
00186     {\cf19 return} makeRequest();\par
00187 \}\par
00188 \par
00189 {\cf17 inline} Response Session::makeRequest({\cf17 const} std::string& contentType) \{\par
00190     std::lock_guard<std::mutex> lock(mutex_request_);\par
00191 \par
00192     {\cf17 struct }curl_slist* headers = NULL;\par
00193     {\cf19 if} (!contentType.empty()) \{\par
00194         headers = curl_slist_append(headers, std::string\{{\cf22 "Content-Type: "} + contentType\}.c_str());\par
00195         {\cf19 if} (contentType == {\cf22 "multipart/form-data"}) \{\par
00196             headers = curl_slist_append(headers, {\cf22 "Expect:"});\par
00197         \}\par
00198     \}\par
00199     headers = curl_slist_append(headers, std::string\{{\cf22 "Authorization: Bearer "} + token_\}.c_str());\par
00200     {\cf19 if} (!organization_.empty()) \{\par
00201         headers = curl_slist_append(headers, std::string\{{\cf22 "OpenAI-Organization: "} + organization_\}.c_str());\par
00202     \}\par
00203     curl_easy_setopt(curl_, CURLOPT_HTTPHEADER, headers);\par
00204     curl_easy_setopt(curl_, CURLOPT_URL, url_.c_str());\par
00205 \par
00206     std::string response_string;\par
00207     std::string header_string;\par
00208     curl_easy_setopt(curl_, CURLOPT_WRITEFUNCTION, writeFunction);\par
00209     curl_easy_setopt(curl_, CURLOPT_WRITEDATA, &response_string);\par
00210     curl_easy_setopt(curl_, CURLOPT_HEADERDATA, &header_string);\par
00211 \par
00212     res_ = curl_easy_perform(curl_);\par
00213 \par
00214     {\cf18 bool} is_error = {\cf17 false};\par
00215     std::string error_msg\{\};\par
00216     {\cf19 if}(res_ != CURLE_OK) \{\par
00217         is_error = {\cf17 true};\par
00218         error_msg = {\cf22 "OpenAI curl_easy_perform() failed: "} + std::string\{curl_easy_strerror(res_)\};\par
00219         {\cf19 if} (throw_exception_) \{\par
00220             {\cf19 throw} std::runtime_error(error_msg);\par
00221         \}\par
00222         {\cf19 else} \{\par
00223             std::cerr << error_msg << {\cf23 '\\n'};\par
00224         \}\par
00225     \}\par
00226 \par
00227     {\cf19 return} \{ response_string, is_error, error_msg \};\par
00228 \}\par
00229 \par
00230 {\cf17 inline} std::string Session::easyEscape({\cf17 const} std::string& text) \{\par
00231     {\cf18 char} *encoded_output = curl_easy_escape(curl_, text.c_str(), {\cf17 static_cast<}{\cf18 int}{\cf17 >}(text.length()));\par
00232     {\cf17 const} {\cf17 auto} str = std::string\{ encoded_output \};\par
00233     curl_free(encoded_output);\par
00234     {\cf19 return} str;\par
00235 \}\par
00236 \par
00237 {\cf20 // forward declaration for category structures}\par
00238 {\cf17 class  }OpenAI;\par
00239 \par
00240 {\cf20 // https://platform.openai.com/docs/api-reference/models}\par
00241 {\cf20 // List and describe the various models available in the API. You can refer to the Models documentation to understand what models are available and the differences between them.}\par
00242 {\cf17 struct }CategoryModel \{\par
00243     Json list();\par
00244     Json retrieve({\cf17 const} std::string& model);\par
00245 \par
00246     CategoryModel(OpenAI& openai) : openai_\{openai\} \{\}\par
00247 {\cf17 private}:\par
00248     OpenAI& openai_;\par
00249 \};\par
00250 \par
00251 {\cf20 // https://platform.openai.com/docs/api-reference/completions}\par
00252 {\cf20 // Given a prompt, the model will return one or more predicted completions, and can also return the probabilities of alternative tokens at each position.}\par
00253 {\cf17 struct }CategoryCompletion \{\par
00254     Json create(Json input);\par
00255 \par
00256     CategoryCompletion(OpenAI& openai) : openai_\{openai\} \{\}\par
00257 \par
00258 {\cf17 private}:\par
00259     OpenAI& openai_;\par
00260 \};\par
00261 \par
00262 {\cf20 // https://platform.openai.com/docs/api-reference/chat}\par
00263 {\cf20 // Given a prompt, the model will return one or more predicted chat completions.}\par
00264 {\cf17 struct }CategoryChat \{\par
00265     Json create(Json input);\par
00266 \par
00267     CategoryChat(OpenAI& openai) : openai_\{openai\} \{\}\par
00268 \par
00269 {\cf17 private}:\par
00270     OpenAI& openai_;\par
00271 \};\par
00272 \par
00273 {\cf20 // https://platform.openai.com/docs/api-reference/audio}\par
00274 {\cf20 // Learn how to turn audio into text.}\par
00275 {\cf17 struct }CategoryAudio \{\par
00276     Json transcribe(Json input);\par
00277     Json translate(Json input);\par
00278 \par
00279     CategoryAudio(OpenAI& openai) : openai_\{openai\} \{\}\par
00280 \par
00281 {\cf17 private}:\par
00282     OpenAI& openai_;\par
00283 \};\par
00284 \par
00285 {\cf20 // https://platform.openai.com/docs/api-reference/edits}\par
00286 {\cf20 // Given a prompt and an instruction, the model will return an edited version of the prompt.}\par
00287 {\cf17 struct }CategoryEdit \{\par
00288     Json create(Json input);\par
00289 \par
00290     CategoryEdit(OpenAI& openai) : openai_\{openai\} \{\}\par
00291 \par
00292 {\cf17 private}:\par
00293     OpenAI& openai_;\par
00294 \};\par
00295 \par
00296 \par
00297 {\cf20 // https://platform.openai.com/docs/api-reference/images}\par
00298 {\cf20 // Given a prompt and/or an input image, the model will generate a new image.}\par
00299 {\cf17 struct }CategoryImage \{\par
00300     Json create(Json input);\par
00301     Json edit(Json input);\par
00302     Json variation(Json input);\par
00303 \par
00304     CategoryImage(OpenAI& openai) : openai_\{openai\} \{\}\par
00305 \par
00306 {\cf17 private}:\par
00307     OpenAI& openai_;\par
00308 \};\par
00309 \par
00310 {\cf20 // https://platform.openai.com/docs/api-reference/embeddings}\par
00311 {\cf20 // Get a vector representation of a given input that can be easily consumed by machine learning models and algorithms.}\par
00312 {\cf17 struct }CategoryEmbedding \{\par
00313     Json create(Json input);\par
00314     CategoryEmbedding(OpenAI& openai) : openai_\{openai\} \{\}\par
00315 \par
00316 {\cf17 private}:\par
00317     OpenAI& openai_;\par
00318 \};\par
00319 \par
00320 {\cf17 struct }FileRequest \{\par
00321     std::string file;\par
00322     std::string purpose;\par
00323 \};\par
00324 \par
00325 {\cf20 // https://platform.openai.com/docs/api-reference/files}\par
00326 {\cf20 // Files are used to upload documents that can be used with features like Fine-tuning.}\par
00327 {\cf17 struct }CategoryFile \{\par
00328     Json list();\par
00329     Json upload(Json input);\par
00330     Json del({\cf17 const} std::string& file); {\cf20 // TODO}\par
00331     Json retrieve({\cf17 const} std::string& file_id);\par
00332     Json content({\cf17 const} std::string& file_id);\par
00333 \par
00334     CategoryFile(OpenAI& openai) : openai_\{openai\} \{\}\par
00335 \par
00336 {\cf17 private}:\par
00337     OpenAI& openai_;\par
00338 \};\par
00339 \par
00340 {\cf20 // https://platform.openai.com/docs/api-reference/fine-tunes}\par
00341 {\cf20 // Manage fine-tuning jobs to tailor a model to your specific training data.}\par
00342 {\cf17 struct }CategoryFineTune \{\par
00343     Json create(Json input);\par
00344     Json list();\par
00345     Json retrieve({\cf17 const} std::string& fine_tune_id);\par
00346     Json content({\cf17 const} std::string& fine_tune_id);\par
00347     Json cancel({\cf17 const} std::string& fine_tune_id);\par
00348     Json events({\cf17 const} std::string& fine_tune_id);\par
00349     Json del({\cf17 const} std::string& model);\par
00350 \par
00351     CategoryFineTune(OpenAI& openai) : openai_\{openai\} \{\}\par
00352 \par
00353 {\cf17 private}:\par
00354     OpenAI& openai_;\par
00355 \};\par
00356 \par
00357 {\cf20 // https://platform.openai.com/docs/api-reference/moderations}\par
00358 {\cf20 // Given a input text, outputs if the model classifies it as violating OpenAI's content policy.}\par
00359 {\cf17 struct }CategoryModeration \{\par
00360     Json create(Json input);\par
00361 \par
00362     CategoryModeration(OpenAI& openai) : openai_\{openai\} \{\}\par
00363 \par
00364 {\cf17 private}:\par
00365     OpenAI& openai_;\par
00366 \};\par
00367 \par
00368 \par
00369 {\cf20 // OpenAI}\par
00370 {\cf17 class }OpenAI \{\par
00371 {\cf17 public}:\par
00372     OpenAI({\cf17 const} std::string& token = {\cf22 ""}, {\cf17 const} std::string& organization = {\cf22 ""}, {\cf18 bool} throw_exception = {\cf17 true}, {\cf17 const} std::string& api_base_url = {\cf22 ""})\par
00373         : session_\{throw_exception\}, token_\{token\}, organization_\{organization\}, throw_exception_\{throw_exception\} \{\par
00374         {\cf19 if} (token.empty()) \{\par
00375             {\cf19 if}({\cf17 const} {\cf18 char}* env_p = std::getenv({\cf22 "OPENAI_API_KEY"})) \{\par
00376                 token_ = std::string\{env_p\};\par
00377             \}\par
00378         \}\par
00379         {\cf19 if} (api_base_url.empty()) \{\par
00380             {\cf19 if}({\cf17 const} {\cf18 char}* env_p = std::getenv({\cf22 "OPENAI_API_BASE"})) \{\par
00381                 base_url = std::string\{env_p\} + {\cf22 "/"};\par
00382             \}\par
00383             {\cf19 else} \{\par
00384                 base_url = {\cf22 "https://api.openai.com/v1/"};\par
00385             \}\par
00386         \}\par
00387         {\cf19 else} \{\par
00388             base_url = api_base_url;\par
00389         \}\par
00390         session_.setUrl(base_url);\par
00391         session_.setToken(token_, organization_);\par
00392     \}\par
00393 \par
00394     OpenAI({\cf17 const} OpenAI&)               = {\cf17 delete};\par
00395     OpenAI& operator=({\cf17 const} OpenAI&)    = {\cf17 delete};\par
00396     OpenAI(OpenAI&&)                    = {\cf17 delete};\par
00397     OpenAI& operator=(OpenAI&&)         = {\cf17 delete};\par
00398 \par
00399     {\cf18 void} setProxy({\cf17 const} std::string& url) \{ session_.setProxyUrl(url); \}\par
00400 \par
00401     {\cf20 // void change_token(const std::string& token) \{ token_ = token; \};}\par
00402     {\cf18 void} setThrowException({\cf18 bool} throw_exception) \{ throw_exception_ = throw_exception; \}\par
00403 \par
00404     {\cf18 void} setMultiformPart({\cf17 const} std::pair<std::string, std::string>& filefield_and_filepath, {\cf17 const} std::map<std::string, std::string>& fields) \{ session_.setMultiformPart(filefield_and_filepath, fields); \}\par
00405 \par
00406     Json post({\cf17 const} std::string& suffix, {\cf17 const} std::string& data, {\cf17 const} std::string& contentType) \{\par
00407         setParameters(suffix, data, contentType);\par
00408         {\cf17 auto} response = session_.postPrepare(contentType);\par
00409         {\cf19 if} (response.is_error)\{\par
00410             trigger_error(response.error_message);\par
00411         \}\par
00412 \par
00413         Json json\{\};\par
00414         {\cf19 if} (isJson(response.text))\{\par
00415 \par
00416             json = Json::parse(response.text);\par
00417             checkResponse(json);\par
00418         \}\par
00419         {\cf19 else}\{\par
00420 {\cf21 #if OPENAI_VERBOSE_OUTPUT}\par
00421             std::cerr << {\cf22 "Response is not a valid JSON"};\par
00422             std::cout << {\cf22 "<< "} << response.text << {\cf22 "\\n"};\par
00423 {\cf21 #endif}\par
00424         \}\par
00425 \par
00426         {\cf19 return} json;\par
00427     \}\par
00428 \par
00429     Json get({\cf17 const} std::string& suffix, {\cf17 const} std::string& data = {\cf22 ""}) \{\par
00430         setParameters(suffix, data);\par
00431         {\cf17 auto} response = session_.getPrepare();\par
00432         {\cf19 if} (response.is_error) \{ trigger_error(response.error_message); \}\par
00433 \par
00434         Json json\{\};\par
00435         {\cf19 if} (isJson(response.text)) \{\par
00436             json = Json::parse(response.text);\par
00437             checkResponse(json);\par
00438         \}\par
00439         {\cf19 else} \{\par
00440 {\cf21 #if OPENAI_VERBOSE_OUTPUT}\par
00441             std::cerr << {\cf22 "Response is not a valid JSON\\n"};\par
00442             std::cout << {\cf22 "<< "} << response.text<< {\cf22 "\\n"};\par
00443 {\cf21 #endif}\par
00444         \}\par
00445         {\cf19 return} json;\par
00446     \}\par
00447 \par
00448     Json post({\cf17 const} std::string& suffix, {\cf17 const} Json& json, {\cf17 const} std::string& contentType={\cf22 "application/json"}) \{\par
00449         {\cf19 return} post(suffix, json.dump(), contentType);\par
00450     \}\par
00451 \par
00452     Json del({\cf17 const} std::string& suffix) \{\par
00453         setParameters(suffix, {\cf22 ""});\par
00454         {\cf17 auto} response = session_.deletePrepare();\par
00455         {\cf19 if} (response.is_error) \{ trigger_error(response.error_message); \}\par
00456 \par
00457         Json json\{\};\par
00458         {\cf19 if} (isJson(response.text)) \{\par
00459             json = Json::parse(response.text);\par
00460             checkResponse(json);\par
00461         \}\par
00462         {\cf19 else} \{\par
00463 {\cf21 #if OPENAI_VERBOSE_OUTPUT}\par
00464             std::cerr << {\cf22 "Response is not a valid JSON\\n"};\par
00465             std::cout << {\cf22 "<< "} << response.text<< {\cf22 "\\n"};\par
00466 {\cf21 #endif}\par
00467         \}\par
00468         {\cf19 return} json;\par
00469     \}\par
00470 \par
00471     std::string easyEscape({\cf17 const} std::string& text) \{ {\cf19 return} session_.easyEscape(text); \}\par
00472 \par
00473     {\cf18 void} debug(){\cf17  const }\{ std::cout << token_ << {\cf23 '\\n'}; \}\par
00474 \par
00475     {\cf18 void} setBaseUrl({\cf17 const} std::string &url) \{\par
00476         base_url = url;\par
00477     \}\par
00478 \par
00479     std::string getBaseUrl(){\cf17  const }\{\par
00480         {\cf19 return} base_url;\par
00481     \}\par
00482 \par
00483 {\cf17 private}:\par
00484     std::string base_url;\par
00485 \par
00486     {\cf18 void} setParameters({\cf17 const} std::string& suffix, {\cf17 const} std::string& data, {\cf17 const} std::string& contentType = {\cf22 ""}) \{\par
00487         {\cf17 auto} complete_url =  base_url+ suffix;\par
00488         session_.setUrl(complete_url);\par
00489 \par
00490         {\cf19 if} (contentType != {\cf22 "multipart/form-data"}) \{\par
00491             session_.setBody(data);\par
00492         \}\par
00493 \par
00494 {\cf21 #if OPENAI_VERBOSE_OUTPUT}\par
00495         std::cout << {\cf22 "<< request: "}<< complete_url << {\cf22 "  "} << data << {\cf23 '\\n'};\par
00496 {\cf21 #endif}\par
00497     \}\par
00498 \par
00499     {\cf18 void} checkResponse({\cf17 const} Json& json) \{\par
00500         {\cf19 if} (json.count({\cf22 "error"})) \{\par
00501             {\cf17 auto} reason = json[{\cf22 "error"}].dump();\par
00502             trigger_error(reason);\par
00503 \par
00504 {\cf21 #if OPENAI_VERBOSE_OUTPUT}\par
00505             std::cerr << {\cf22 ">> response error :\\n"} << json.dump(2) << {\cf22 "\\n"};\par
00506 {\cf21 #endif}\par
00507         \}\par
00508     \}\par
00509 \par
00510     {\cf20 // as of now the only way}\par
00511     {\cf18 bool} isJson({\cf17 const} std::string &data)\{\par
00512         {\cf18 bool} rc = {\cf17 true};\par
00513         {\cf19 try} \{\par
00514             {\cf17 auto} json = Json::parse(data); {\cf20 // throws if no json}\par
00515         \}\par
00516         {\cf19 catch} (std::exception &)\{\par
00517             rc = {\cf17 false};\par
00518         \}\par
00519         {\cf19 return}(rc);\par
00520     \}\par
00521 \par
00522     {\cf18 void} trigger_error({\cf17 const} std::string& msg) \{\par
00523         {\cf19 if} (throw_exception_) \{\par
00524             {\cf19 throw} std::runtime_error(msg);\par
00525         \}\par
00526         {\cf19 else} \{\par
00527             std::cerr << {\cf22 "[OpenAI] error. Reason: "} << msg << {\cf23 '\\n'};\par
00528         \}\par
00529     \}\par
00530 \par
00531 {\cf17 public}:\par
00532     CategoryModel           model     \{*{\cf17 this}\};\par
00533     CategoryCompletion      completion\{*{\cf17 this}\};\par
00534     CategoryEdit            edit      \{*{\cf17 this}\};\par
00535     CategoryImage           image     \{*{\cf17 this}\};\par
00536     CategoryEmbedding       embedding \{*{\cf17 this}\};\par
00537     CategoryFile            file      \{*{\cf17 this}\};\par
00538     CategoryFineTune        fine_tune \{*{\cf17 this}\};\par
00539     CategoryModeration      moderation\{*{\cf17 this}\};\par
00540     CategoryChat            chat      \{*{\cf17 this}\};\par
00541     CategoryAudio           audio     \{*{\cf17 this}\};\par
00542     {\cf20 // CategoryEngine          engine\{*this\}; // Not handled since deprecated (use Model instead)}\par
00543 \par
00544 {\cf17 private}:\par
00545     Session                 session_;\par
00546     std::string             token_;\par
00547     std::string             organization_;\par
00548     {\cf18 bool}                    throw_exception_;\par
00549 \};\par
00550 \par
00551 {\cf17 inline} std::string bool_to_string({\cf17 const} {\cf18 bool} b) \{\par
00552     std::ostringstream ss;\par
00553     ss << std::boolalpha << b;\par
00554     {\cf19 return} ss.str();\par
00555 \}\par
00556 \par
00557 {\cf17 inline} OpenAI& start({\cf17 const} std::string& token = {\cf22 ""}, {\cf17 const} std::string& organization = {\cf22 ""}, {\cf18 bool} throw_exception = {\cf17 true})  \{\par
00558     {\cf17 static} OpenAI instance\{token, organization, throw_exception\};\par
00559     {\cf19 return} instance;\par
00560 \}\par
00561 \par
00562 {\cf17 inline} OpenAI& instance() \{\par
00563     {\cf19 return} start();\par
00564 \}\par
00565 \par
00566 {\cf17 inline} Json post({\cf17 const} std::string& suffix, {\cf17 const} Json& json) \{\par
00567     {\cf19 return} instance().post(suffix, json);\par
00568 \}\par
00569 \par
00570 {\cf17 inline} Json get({\cf17 const} std::string& suffix{\cf20 /*, const Json& json*/}) \{\par
00571     {\cf19 return} instance().get(suffix);\par
00572 \}\par
00573 \par
00574 {\cf20 // Helper functions to get category structures instance()}\par
00575 \par
00576 {\cf17 inline} CategoryModel& model() \{\par
00577     {\cf19 return} instance().model;\par
00578 \}\par
00579 \par
00580 {\cf17 inline} CategoryCompletion& completion() \{\par
00581     {\cf19 return} instance().completion;\par
00582 \}\par
00583 \par
00584 {\cf17 inline} CategoryChat& chat() \{\par
00585     {\cf19 return} instance().chat;\par
00586 \}\par
00587 \par
00588 {\cf17 inline} CategoryAudio& audio() \{\par
00589     {\cf19 return} instance().audio;\par
00590 \}\par
00591 \par
00592 {\cf17 inline} CategoryEdit& edit() \{\par
00593     {\cf19 return} instance().edit;\par
00594 \}\par
00595 \par
00596 {\cf17 inline} CategoryImage& image() \{\par
00597     {\cf19 return} instance().image;\par
00598 \}\par
00599 \par
00600 {\cf17 inline} CategoryEmbedding& embedding() \{\par
00601     {\cf19 return} instance().embedding;\par
00602 \}\par
00603 \par
00604 {\cf17 inline} CategoryFile& file() \{\par
00605     {\cf19 return} instance().file;\par
00606 \}\par
00607 \par
00608 {\cf17 inline} CategoryFineTune& fineTune() \{\par
00609     {\cf19 return} instance().fine_tune;\par
00610 \}\par
00611 \par
00612 {\cf17 inline} CategoryModeration& moderation() \{\par
00613     {\cf19 return} instance().moderation;\par
00614 \}\par
00615 \par
00616 {\cf20 // Definitions of category methods}\par
00617 \par
00618 {\cf20 // GET https://api.openai.com/v1/models}\par
00619 {\cf20 // Lists the currently available models, and provides basic information about each one such as the owner and availability.}\par
00620 {\cf17 inline} Json CategoryModel::list() \{\par
00621     {\cf19 return} openai_.get({\cf22 "models"});\par
00622 \}\par
00623 \par
00624 {\cf20 // GET https://api.openai.com/v1/models/\{model\}}\par
00625 {\cf20 // Retrieves a model instance, providing basic information about the model such as the owner and permissioning.}\par
00626 {\cf17 inline} Json CategoryModel::retrieve({\cf17 const} std::string& model) \{\par
00627     {\cf19 return} openai_.get({\cf22 "models/"} + model);\par
00628 \}\par
00629 \par
00630 {\cf20 // POST https://api.openai.com/v1/completions}\par
00631 {\cf20 // Creates a completion for the provided prompt and parameters}\par
00632 {\cf17 inline} Json CategoryCompletion::create(Json input) \{\par
00633     {\cf19 return} openai_.post({\cf22 "completions"}, input);\par
00634 \}\par
00635 \par
00636 {\cf20 // POST https://api.openai.com/v1/chat/completions}\par
00637 {\cf20 // Creates a chat completion for the provided prompt and parameters}\par
00638 {\cf17 inline} Json CategoryChat::create(Json input) \{\par
00639     {\cf19 return} openai_.post({\cf22 "chat/completions"}, input);\par
00640 \}\par
00641 \par
00642 {\cf20 // POST https://api.openai.com/v1/audio/transcriptions}\par
00643 {\cf20 // Transcribes audio into the input language.}\par
00644 {\cf17 inline} Json CategoryAudio::transcribe(Json input) \{\par
00645     openai_.setMultiformPart(\{{\cf22 "file"}, input[{\cf22 "file"}].get<std::string>()\},\par
00646                              std::map<std::string, std::string>\{\{{\cf22 "model"}, input[{\cf22 "model"}].get<std::string>()\}\}\par
00647                              );\par
00648 \par
00649     {\cf19 return} openai_.post({\cf22 "audio/transcriptions"}, std::string\{{\cf22 ""}\}, {\cf22 "multipart/form-data"});\par
00650 \}\par
00651 \par
00652 {\cf20 // POST https://api.openai.com/v1/audio/translations}\par
00653 {\cf20 // Translates audio into into English..}\par
00654 {\cf17 inline} Json CategoryAudio::translate(Json input) \{\par
00655     openai_.setMultiformPart(\{{\cf22 "file"}, input[{\cf22 "file"}].get<std::string>()\},\par
00656                              std::map<std::string, std::string>\{\{{\cf22 "model"}, input[{\cf22 "model"}].get<std::string>()\}\}\par
00657                              );\par
00658 \par
00659     {\cf19 return} openai_.post({\cf22 "audio/translations"}, std::string\{{\cf22 ""}\}, {\cf22 "multipart/form-data"});\par
00660 \}\par
00661 \par
00662 {\cf20 // POST https://api.openai.com/v1/translations}\par
00663 {\cf20 // Creates a new edit for the provided input, instruction, and parameters}\par
00664 {\cf17 inline} Json CategoryEdit::create(Json input) \{\par
00665     {\cf19 return} openai_.post({\cf22 "edits"}, input);\par
00666 \}\par
00667 \par
00668 {\cf20 // POST https://api.openai.com/v1/images/generations}\par
00669 {\cf20 // Given a prompt and/or an input image, the model will generate a new image.}\par
00670 {\cf17 inline} Json CategoryImage::create(Json input) \{\par
00671     {\cf19 return} openai_.post({\cf22 "images/generations"}, input);\par
00672 \}\par
00673 \par
00674 {\cf20 // POST https://api.openai.com/v1/images/edits}\par
00675 {\cf20 // Creates an edited or extended image given an original image and a prompt.}\par
00676 {\cf17 inline} Json CategoryImage::edit(Json input) \{\par
00677     std::string prompt = input[{\cf22 "prompt"}].get<std::string>(); {\cf20 // required}\par
00678     {\cf20 // Default values}\par
00679     std::string mask = {\cf22 ""};\par
00680     {\cf18 int} n = 1;\par
00681     std::string size = {\cf22 "1024x1024"};\par
00682     std::string response_format = {\cf22 "url"};\par
00683     std::string user = {\cf22 ""};\par
00684 \par
00685     {\cf19 if} (input.contains({\cf22 "mask"})) \{\par
00686         mask = input[{\cf22 "mask"}].get<std::string>();\par
00687     \}\par
00688     {\cf19 if} (input.contains({\cf22 "n"})) \{\par
00689         n = input[{\cf22 "n"}].get<{\cf18 int}>();\par
00690     \}\par
00691     {\cf19 if} (input.contains({\cf22 "size"})) \{\par
00692         size = input[{\cf22 "size"}].get<std::string>();\par
00693     \}\par
00694     {\cf19 if} (input.contains({\cf22 "response_format"})) \{\par
00695         response_format = input[{\cf22 "response_format"}].get<std::string>();\par
00696     \}\par
00697     {\cf19 if} (input.contains({\cf22 "user"})) \{\par
00698         user = input[{\cf22 "user"}].get<std::string>();\par
00699     \}\par
00700     openai_.setMultiformPart(\{{\cf22 "image"},input[{\cf22 "image"}].get<std::string>()\},\par
00701                              std::map<std::string, std::string>\{\par
00702                                  \{{\cf22 "prompt"}, prompt\},\par
00703                                  \{{\cf22 "mask"}, mask\},\par
00704                                  \{{\cf22 "n"}, std::to_string(n)\},\par
00705                                  \{{\cf22 "size"}, size\},\par
00706                                  \{{\cf22 "response_format"}, response_format\},\par
00707                                  \{{\cf22 "user"}, user\}\par
00708                              \}\par
00709                              );\par
00710 \par
00711     {\cf19 return} openai_.post({\cf22 "images/edits"}, std::string\{{\cf22 ""}\}, {\cf22 "multipart/form-data"});\par
00712 \}\par
00713 \par
00714 {\cf20 // POST https://api.openai.com/v1/images/variations}\par
00715 {\cf20 // Creates a variation of a given image.}\par
00716 {\cf17 inline} Json CategoryImage::variation(Json input) \{\par
00717     {\cf20 // Default values}\par
00718     {\cf18 int} n = 1;\par
00719     std::string size = {\cf22 "1024x1024"};\par
00720     std::string response_format = {\cf22 "url"};\par
00721     std::string user = {\cf22 ""};\par
00722 \par
00723     {\cf19 if} (input.contains({\cf22 "n"})) \{\par
00724         n = input[{\cf22 "n"}].get<{\cf18 int}>();\par
00725     \}\par
00726     {\cf19 if} (input.contains({\cf22 "size"})) \{\par
00727         size = input[{\cf22 "size"}].get<std::string>();\par
00728     \}\par
00729     {\cf19 if} (input.contains({\cf22 "response_format"})) \{\par
00730         response_format = input[{\cf22 "response_format"}].get<std::string>();\par
00731     \}\par
00732     {\cf19 if} (input.contains({\cf22 "user"})) \{\par
00733         user = input[{\cf22 "user"}].get<std::string>();\par
00734     \}\par
00735     openai_.setMultiformPart(\{{\cf22 "image"},input[{\cf22 "image"}].get<std::string>()\},\par
00736                              std::map<std::string, std::string>\{\par
00737                                  \{{\cf22 "n"}, std::to_string(n)\},\par
00738                                  \{{\cf22 "size"}, size\},\par
00739                                  \{{\cf22 "response_format"}, response_format\},\par
00740                                  \{{\cf22 "user"}, user\}\par
00741                              \}\par
00742                              );\par
00743 \par
00744     {\cf19 return} openai_.post({\cf22 "images/variations"}, std::string\{{\cf22 ""}\}, {\cf22 "multipart/form-data"});\par
00745 \}\par
00746 \par
00747 {\cf17 inline} Json CategoryEmbedding::create(Json input) \{\par
00748     {\cf19 return} openai_.post({\cf22 "embeddings"}, input);\par
00749 \}\par
00750 \par
00751 {\cf17 inline} Json CategoryFile::list() \{\par
00752     {\cf19 return} openai_.get({\cf22 "files"});\par
00753 \}\par
00754 \par
00755 {\cf17 inline} Json CategoryFile::upload(Json input) \{\par
00756     openai_.setMultiformPart(\{{\cf22 "file"}, input[{\cf22 "file"}].get<std::string>()\},\par
00757                              std::map<std::string, std::string>\{\{{\cf22 "purpose"}, input[{\cf22 "purpose"}].get<std::string>()\}\}\par
00758                              );\par
00759 \par
00760     {\cf19 return} openai_.post({\cf22 "files"}, std::string\{{\cf22 ""}\}, {\cf22 "multipart/form-data"});\par
00761 \}\par
00762 \par
00763 {\cf17 inline} Json CategoryFile::del({\cf17 const} std::string& file_id) \{\par
00764     {\cf19 return} openai_.del({\cf22 "files/"} + file_id);\par
00765 \}\par
00766 \par
00767 {\cf17 inline} Json CategoryFile::retrieve({\cf17 const} std::string& file_id) \{\par
00768     {\cf19 return} openai_.get({\cf22 "files/"} + file_id);\par
00769 \}\par
00770 \par
00771 {\cf17 inline} Json CategoryFile::content({\cf17 const} std::string& file_id) \{\par
00772     {\cf19 return} openai_.get({\cf22 "files/"} + file_id + {\cf22 "/content"});\par
00773 \}\par
00774 \par
00775 {\cf17 inline} Json CategoryFineTune::create(Json input) \{\par
00776     {\cf19 return} openai_.post({\cf22 "fine-tunes"}, input);\par
00777 \}\par
00778 \par
00779 {\cf17 inline} Json CategoryFineTune::list() \{\par
00780     {\cf19 return} openai_.get({\cf22 "fine-tunes"});\par
00781 \}\par
00782 \par
00783 {\cf17 inline} Json CategoryFineTune::retrieve({\cf17 const} std::string& fine_tune_id) \{\par
00784     {\cf19 return} openai_.get({\cf22 "fine-tunes/"} + fine_tune_id);\par
00785 \}\par
00786 \par
00787 {\cf17 inline} Json CategoryFineTune::content({\cf17 const} std::string& fine_tune_id) \{\par
00788     {\cf19 return} openai_.get({\cf22 "fine-tunes/"} + fine_tune_id + {\cf22 "/content"});\par
00789 \}\par
00790 \par
00791 {\cf17 inline} Json CategoryFineTune::cancel({\cf17 const} std::string& fine_tune_id) \{\par
00792     {\cf19 return} openai_.post({\cf22 "fine-tunes/"} + fine_tune_id + {\cf22 "/cancel"}, Json\{\});\par
00793 \}\par
00794 \par
00795 {\cf17 inline} Json CategoryFineTune::events({\cf17 const} std::string& fine_tune_id) \{\par
00796     {\cf19 return} openai_.get({\cf22 "fine-tunes/"} + fine_tune_id + {\cf22 "/events"});\par
00797 \}\par
00798 \par
00799 {\cf17 inline} Json CategoryFineTune::del({\cf17 const} std::string& model) \{\par
00800     {\cf19 return} openai_.del({\cf22 "models/"} + model);\par
00801 \}\par
00802 \par
00803 {\cf17 inline} Json CategoryModeration::create(Json input) \{\par
00804     {\cf19 return} openai_.post({\cf22 "moderations"}, input);\par
00805 \}\par
00806 \par
00807 \} {\cf20 // namespace _detail}\par
00808 \par
00809 {\cf20 // Public interface}\par
00810 \par
00811 {\cf17 using }_detail::OpenAI;\par
00812 \par
00813 {\cf20 // instance}\par
00814 {\cf17 using }_detail::start;\par
00815 {\cf17 using }_detail::instance;\par
00816 \par
00817 {\cf20 // Generic methods}\par
00818 {\cf17 using }_detail::post;\par
00819 {\cf17 using }_detail::get;\par
00820 \par
00821 {\cf20 // Helper categories access}\par
00822 {\cf17 using }_detail::model;\par
00823 {\cf17 using }_detail::completion;\par
00824 {\cf17 using }_detail::edit;\par
00825 {\cf17 using }_detail::image;\par
00826 {\cf17 using }_detail::embedding;\par
00827 {\cf17 using }_detail::file;\par
00828 {\cf17 using }_detail::fineTune;\par
00829 {\cf17 using }_detail::moderation;\par
00830 {\cf17 using }_detail::chat;\par
00831 {\cf17 using }_detail::audio;\par
00832 \par
00833 {\cf17 using }_detail::Json;\par
00834 \par
00835 \} {\cf20 // namespace openai}\par
00836 \par
00837 {\cf21 #endif }{\cf20 // OPENAI_HPP_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
settingswindow.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "settingswindow.h"}\par
00002 {\cf21 #include "ui_settingswindow.h"}\par
00003 {\cf21 #include <QFile>}\par
00004 {\cf21 #include <QSettings>}\par
00005 {\cf21 #include <QDir>}\par
00006 \par
00007 {\cf21 #include <nlohmann/json.hpp>}\par
00008 \par
00009 SettingsWindow::SettingsWindow(QWidget *parent) :\par
00010     QDialog(parent),\par
00011     ui(new Ui::SettingsWindow)\par
00012 \{\par
00013     ui->setupUi({\cf17 this});\par
00014     QSettings settings(QDir::homePath()+ {\cf22 "/Desktop/mynotesmaker settings.ini"}, QSettings::IniFormat);\par
00015     {\cf19 if} (settings.value({\cf22 "GPT version"}, {\cf22 "gpt-3.5-turbo"}) == {\cf22 "gpt-3.5-turbo"})\{\par
00016         ui->probtn->setStyleSheet({\cf22 "QPushButton \{"}\par
00017                                  {\cf22 "    font: 700 10pt 'Segoe Script';"}\par
00018                                  {\cf22 "    background-color: rgb(251, 230, 127);"}\par
00019                                  {\cf22 "    border-radius: 30px;"}\par
00020                                  {\cf22 "\}"}\par
00021                                  {\cf22 "QPushButton:hover \{"}\par
00022                                  {\cf22 "    background-color: rgb(251, 180, 82);"}\par
00023                                  {\cf22 "\}"}\par
00024                                  {\cf22 "QPushButton:pressed \{"}\par
00025                                  {\cf22 "    background-color: rgb(255, 140, 0);"}\par
00026                                  {\cf22 "\}"});\par
00027         ui->standartbtn->setStyleSheet({\cf22 "QPushButton \{"}\par
00028                                  {\cf22 "    font: 700 10pt 'Segoe Script';"}\par
00029                                  {\cf22 "    background-color: rgb(251, 230, 127);"}\par
00030                                  {\cf22 "    border-radius: 30px;"}\par
00031                                  {\cf22 "    border: 2px solid blue;"}\par
00032                                  {\cf22 "\}"}\par
00033                                  {\cf22 "QPushButton:hover \{"}\par
00034                                  {\cf22 "    background-color: rgb(251, 180, 82);"}\par
00035                                  {\cf22 "\}"}\par
00036                                  {\cf22 "QPushButton:pressed \{"}\par
00037                                  {\cf22 "    background-color: rgb(255, 140, 0);"}\par
00038                                  {\cf22 "\}"});\par
00039     \}\par
00040     {\cf19 else}\{\par
00041         ui->probtn->setStyleSheet({\cf22 "QPushButton \{"}\par
00042                                  {\cf22 "    font: 700 10pt 'Segoe Script';"}\par
00043                                  {\cf22 "    background-color: rgb(251, 230, 127);"}\par
00044                                  {\cf22 "    border-radius: 30px;"}\par
00045                                  {\cf22 "    border: 2px solid blue;"}\par
00046                                  {\cf22 "\}"}\par
00047                                  {\cf22 "QPushButton:hover \{"}\par
00048                                  {\cf22 "    background-color: rgb(251, 180, 82);"}\par
00049                                  {\cf22 "\}"}\par
00050                                  {\cf22 "QPushButton:pressed \{"}\par
00051                                  {\cf22 "    background-color: rgb(255, 140, 0);"}\par
00052                                  {\cf22 "\}"});\par
00053         ui->standartbtn->setStyleSheet({\cf22 "QPushButton \{"}\par
00054                                  {\cf22 "    font: 700 10pt 'Segoe Script';"}\par
00055                                  {\cf22 "    background-color: rgb(251, 230, 127);"}\par
00056                                  {\cf22 "    border-radius: 30px;"}\par
00057                                  {\cf22 "\}"}\par
00058                                  {\cf22 "QPushButton:hover \{"}\par
00059                                  {\cf22 "    background-color: rgb(251, 180, 82);"}\par
00060                                  {\cf22 "\}"}\par
00061                                  {\cf22 "QPushButton:pressed \{"}\par
00062                                  {\cf22 "    background-color: rgb(255, 140, 0);"}\par
00063                                  {\cf22 "\}"});\par
00064     \}\par
00065 \}\par
00066 \par
00067 SettingsWindow::~SettingsWindow()\par
00068 \{\par
00069     {\cf17 delete} ui;\par
00070 \}\par
00071 \par
00072 {\cf18 void} SettingsWindow::on_okbtn_clicked()\par
00073 \{\par
00074     close();\par
00075 \}\par
00076 \par
00077 {\cf18 void} SettingsWindow::on_standartbtn_clicked()\par
00078 \{\par
00079     QSettings settings(QDir::homePath()+ {\cf22 "/Desktop/mynotesmaker settings.ini"}, QSettings::IniFormat);\par
00080     settings.setValue({\cf22 "GPT version"}, {\cf22 "gpt-3.5-turbo"});\par
00081     settings.sync();\par
00082     ui->probtn->setStyleSheet({\cf22 "QPushButton \{"}\par
00083                              {\cf22 "    font: 700 10pt 'Segoe Script';"}\par
00084                              {\cf22 "    background-color: rgb(251, 230, 127);"}\par
00085                              {\cf22 "    border-radius: 30px;"}\par
00086                              {\cf22 "\}"}\par
00087                              {\cf22 "QPushButton:hover \{"}\par
00088                              {\cf22 "    background-color: rgb(251, 180, 82);"}\par
00089                              {\cf22 "\}"}\par
00090                              {\cf22 "QPushButton:pressed \{"}\par
00091                              {\cf22 "    background-color: rgb(255, 140, 0);"}\par
00092                              {\cf22 "\}"});\par
00093     ui->standartbtn->setStyleSheet({\cf22 "QPushButton \{"}\par
00094                              {\cf22 "    font: 700 10pt 'Segoe Script';"}\par
00095                              {\cf22 "    background-color: rgb(251, 230, 127);"}\par
00096                              {\cf22 "    border-radius: 30px;"}\par
00097                              {\cf22 "    border: 2px solid blue;"}\par
00098                              {\cf22 "\}"}\par
00099                              {\cf22 "QPushButton:hover \{"}\par
00100                              {\cf22 "    background-color: rgb(251, 180, 82);"}\par
00101                              {\cf22 "\}"}\par
00102                              {\cf22 "QPushButton:pressed \{"}\par
00103                              {\cf22 "    background-color: rgb(255, 140, 0);"}\par
00104                              {\cf22 "\}"});\par
00105 \}\par
00106 \par
00107 {\cf18 void} SettingsWindow::on_probtn_clicked()\par
00108 \{\par
00109     QSettings settings(QDir::homePath()+ {\cf22 "/Desktop/mynotesmaker settings.ini"}, QSettings::IniFormat);\par
00110     settings.setValue({\cf22 "GPT version"}, {\cf22 "gpt-3.5-turbo-16k"});\par
00111     settings.sync();\par
00112     ui->probtn->setStyleSheet({\cf22 "QPushButton \{"}\par
00113                              {\cf22 "    font: 700 10pt 'Segoe Script';"}\par
00114                              {\cf22 "    background-color: rgb(251, 230, 127);"}\par
00115                              {\cf22 "    border-radius: 30px;"}\par
00116                              {\cf22 "    border: 2px solid blue;"}\par
00117                              {\cf22 "\}"}\par
00118                              {\cf22 "QPushButton:hover \{"}\par
00119                              {\cf22 "    background-color: rgb(251, 180, 82);"}\par
00120                              {\cf22 "\}"}\par
00121                              {\cf22 "QPushButton:pressed \{"}\par
00122                              {\cf22 "    background-color: rgb(255, 140, 0);"}\par
00123                              {\cf22 "\}"});\par
00124     ui->standartbtn->setStyleSheet({\cf22 "QPushButton \{"}\par
00125                              {\cf22 "    font: 700 10pt 'Segoe Script';"}\par
00126                              {\cf22 "    background-color: rgb(251, 230, 127);"}\par
00127                              {\cf22 "    border-radius: 30px;"}\par
00128                              {\cf22 "\}"}\par
00129                              {\cf22 "QPushButton:hover \{"}\par
00130                              {\cf22 "    background-color: rgb(251, 180, 82);"}\par
00131                              {\cf22 "\}"}\par
00132                              {\cf22 "QPushButton:pressed \{"}\par
00133                              {\cf22 "    background-color: rgb(255, 140, 0);"}\par
00134                              {\cf22 "\}"});\par
00135 \}\par
00136 \par
00137 \par
00138 {\cf18 void} SettingsWindow::mousePressEvent(QMouseEvent *event)\{\par
00139     cur_pos = {\cf17 event}->globalPosition().toPoint();\par
00140 \}\par
00141 \par
00142 {\cf18 void} SettingsWindow::mouseMoveEvent(QMouseEvent *event)\{\par
00143     new_pos = QPoint(event->globalPosition().toPoint() - cur_pos);\par
00144     move(x()+new_pos.x(), y()+new_pos.y());\par
00145     cur_pos = {\cf17 event}->globalPosition().toPoint();\par
00146 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
settingswindow.h\par \pard\plain 
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef SETTINGSWINDOW_H}\par
00002 {\cf21 #define SETTINGSWINDOW_H}\par
00003 \par
00004 {\cf21 #include <QDialog>}\par
00005 {\cf21 #include <QMouseEvent>}\par
00006 {\cf21 #include <QPoint>}\par
00007 \par
00008 {\cf17 namespace }Ui \{\par
00009 {\cf17 class }SettingsWindow;\par
00010 \}\par
00011 \par
00012 {\cf17 class }SettingsWindow : {\cf17 public} QDialog\par
00013 \{\par
00014     Q_OBJECT\par
00015 \par
00016 {\cf17 public}:\par
00017     {\cf17 explicit} SettingsWindow(QWidget *parent = {\cf17 nullptr});\par
00018     ~SettingsWindow();\par
00019 \par
00020 {\cf17 private} slots:\par
00024     {\cf18 void} on_okbtn_clicked();\par
00028     {\cf18 void} on_standartbtn_clicked();\par
00032     {\cf18 void} on_probtn_clicked();\par
00033 \par
00034 \par
00035 {\cf17 private}:\par
00036     Ui::SettingsWindow *ui;\par
00037 \par
00038     {\cf18 void} mousePressEvent(QMouseEvent *event);\par
00039     {\cf18 void} mouseMoveEvent(QMouseEvent *event);\par
00040 \par
00041     QPoint cur_pos;\par
00042     QPoint new_pos;\par
00043 \};\par
00044 \par
00045 {\cf21 #endif }{\cf20 // SETTINGSWINDOW_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
test_mynotesmaker.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "test_mynotesmaker.h"}\par
00002 {\cf21 #include "ui_mainwindow.h"}\par
00003 {\cf21 #include "mainwindow.h"}\par
00004 \par
00005 Test_MyNotesMaker::Test_MyNotesMaker(QObject *parent)\par
00006     : QObject\{parent\}\par
00007 \{\}\par
00008 \par
00009 {\cf18 void} Test_MyNotesMaker::testMainWindowHideButton()\par
00010 \{\par
00011     MainWindow mainWindow;\par
00012 \par
00013     QVERIFY(!mainWindow.isMinimized());\par
00014 \par
00015     QPushButton* hideButton = mainWindow.findChild<QPushButton*>({\cf22 "hidebtn"});\par
00016     QVERIFY(hideButton != {\cf17 nullptr});\par
00017 \par
00018     QTest::mouseClick(hideButton, Qt::LeftButton);\par
00019 \par
00020     QVERIFY(mainWindow.isMinimized());\par
00021 \}\par
00022 \par
00023 {\cf18 void} Test_MyNotesMaker::testMainWindowPinButton()\par
00024 \{\par
00025     MainWindow mainWindow;\par
00026 \par
00027     QVERIFY(!(mainWindow.windowFlags() & Qt::WindowStaysOnTopHint));\par
00028 \par
00029     QPushButton* pinButton = mainWindow.findChild<QPushButton*>({\cf22 "pinbtn"});\par
00030     QVERIFY(pinButton != {\cf17 nullptr});\par
00031 \par
00032     QTest::mouseClick(pinButton, Qt::LeftButton);\par
00033 \par
00034     QVERIFY(mainWindow.windowFlags() & Qt::WindowStaysOnTopHint);\par
00035 \}\par
00036 \par
00037 {\cf18 void} Test_MyNotesMaker::testMainWindowLineEdit()\par
00038 \{\par
00039     MainWindow mainWindow;\par
00040 \par
00041     QLineEdit *lineEdit = mainWindow.findChild<QLineEdit*>({\cf22 "lineEdit"});\par
00042 \par
00043     QVERIFY(lineEdit != {\cf17 nullptr});\par
00044 \par
00045     QTest::keyClicks(lineEdit, {\cf22 "qwerty12345!"});\par
00046 \par
00047     QCOMPARE(lineEdit->text(), QString({\cf22 "qwerty12345!"}));\par
00048 \par
00049     QTest::keyClicks(lineEdit, {\cf22 " Hi#####"});\par
00050 \par
00051     QCOMPARE(lineEdit->text(), QString({\cf22 "qwerty12345! Hi#####"}));\par
00052 \par
00053     QTest::keyClicks(lineEdit, {\cf22 "    How are you?"});\par
00054 \par
00055     QCOMPARE(lineEdit->text(), QString({\cf22 "qwerty12345! Hi#####    How are you?"}));\par
00056 \}\par
00057 \par
00058 \par
00059 \par
00060 {\cf18 void} Test_MyNotesMaker::testMainWindowPlainTextEdit()\par
00061 \{\par
00062     MainWindow mainWindow;\par
00063 \par
00064     QLineEdit *lineEdit = mainWindow.findChild<QLineEdit*>({\cf22 "lineEdit"});\par
00065 \par
00066     QVERIFY(lineEdit != {\cf17 nullptr});\par
00067 \par
00068     QTest::keyClicks(lineEdit, {\cf22 "Hi!"});\par
00069 \par
00070     QCOMPARE(lineEdit->text(), QString({\cf22 "Hi!"}));\par
00071 \par
00072     QTest::keyClicks(lineEdit, {\cf22 " How are you?"});\par
00073 \par
00074     QCOMPARE(lineEdit->text(), QString({\cf22 "Hi! How are you?"}));\par
00075 \par
00076     QTest::keyClicks(lineEdit, {\cf22 " I'm fine"});\par
00077 \par
00078     QCOMPARE(lineEdit->text(), QString({\cf22 "Hi! How are you? I'm fine"}));\par
00079 \}\par
00080 \par
00081 {\cf18 void} Test_MyNotesMaker::testMainWindowLineEditEnter()\par
00082 \{\par
00083     MainWindow mainWindow;\par
00084 \par
00085     QLineEdit *lineEdit = mainWindow.findChild<QLineEdit*>({\cf22 "lineEdit"});\par
00086     QVERIFY(lineEdit != {\cf17 nullptr});\par
00087 \par
00088     QPlainTextEdit *plainTextEdit = mainWindow.findChild<QPlainTextEdit*>({\cf22 "plainTextEdit"});\par
00089     QVERIFY(plainTextEdit != {\cf17 nullptr});\par
00090 \par
00091     QTest::keyClicks(lineEdit, {\cf22 "Hi!"});\par
00092 \par
00093     QTest::keyClicks(plainTextEdit, {\cf22 " How are you?"});\par
00094 \par
00095 \par
00096     QPushButton* savebtn = mainWindow.findChild<QPushButton*>({\cf22 "savebtn"});\par
00097 \par
00098     QVERIFY(savebtn != {\cf17 nullptr});\par
00099 \par
00100     QTest::mouseClick(savebtn, Qt::LeftButton);\par
00101 \par
00102     QTest::keyClicks(lineEdit, {\cf22 " 2"});\par
00103     QTest::keyClicks(plainTextEdit, {\cf22 " 2"});\par
00104 \par
00105     QTest::mouseClick(savebtn, Qt::LeftButton);\par
00106 \par
00107     QString filePath = QDir::homePath() + {\cf22 "/Desktop/mynotesmaker.json"};\par
00108     QVERIFY(QFile::exists(filePath));\par
00109 \par
00110     QFile jsonFile(filePath);\par
00111     QVERIFY(jsonFile.open(QIODevice::ReadOnly | QIODevice::Text));\par
00112 \par
00113     QString jsonString = jsonFile.readAll();\par
00114     jsonFile.close();\par
00115 \par
00116     nlohmann::json jsonData = nlohmann::json::parse(jsonString.toStdString());\par
00117 \par
00118     QVERIFY(jsonData.size() > 0);\par
00119 \}\par
00120 \par
00121 {\cf18 void} Test_MyNotesMaker::testHistoryOpenNote()\par
00122 \{\par
00123     HistoryWindow historyWin;\par
00124 \par
00125     QListWidget* listWidget = historyWin.findChild<QListWidget*>({\cf22 "listWidget"});\par
00126     QVERIFY(listWidget != {\cf17 nullptr});\par
00127 \par
00128     listWidget->setCurrentRow(0);\par
00129 \par
00130     QPushButton* open = historyWin.findChild<QPushButton*>({\cf22 "openbtn"});\par
00131     QVERIFY(open != {\cf17 nullptr});\par
00132     QTest::mouseClick(open, Qt::LeftButton);\par
00133 \par
00134     QVERIFY(historyWin.isHidden());\par
00135 \}\par
00136 \par
00137 \par
00138 {\cf18 void} Test_MyNotesMaker::testHistoryDeleteButton()\par
00139 \{\par
00140     HistoryWindow historyWin;\par
00141 \par
00142     QListWidget* listWidget = historyWin.findChild<QListWidget*>({\cf22 "listWidget"});\par
00143     QVERIFY(listWidget != {\cf17 nullptr});\par
00144 \par
00145     {\cf18 int} expectedInitialSize = listWidget->count();\par
00146 \par
00147     QPushButton* deleteButton = historyWin.findChild<QPushButton*>({\cf22 "deletebtn"});\par
00148     QVERIFY(deleteButton != {\cf17 nullptr});\par
00149 \par
00150     {\cf19 if} (expectedInitialSize > 0) \{\par
00151         listWidget->setCurrentRow(0);\par
00152 \par
00153         QTest::mouseClick(deleteButton, Qt::LeftButton);\par
00154 \par
00155         QCOMPARE(listWidget->count(), expectedInitialSize - 1);\par
00156     \}\par
00157 \par
00158     {\cf19 if} (listWidget->count() > 0) \{\par
00159         listWidget->setCurrentRow(0);\par
00160 \par
00161         QTest::mouseClick(deleteButton, Qt::LeftButton);\par
00162 \par
00163         QCOMPARE(listWidget->count(), expectedInitialSize - 2);\par
00164     \}\par
00165 \}\par
00166 \par
00167 {\cf18 void} Test_MyNotesMaker::testHistoryCancleButton()\par
00168 \{\par
00169     HistoryWindow historyWin;\par
00170 \par
00171     QPushButton* cancel = historyWin.findChild<QPushButton*>({\cf22 "okbtn"});\par
00172     QVERIFY(cancel != {\cf17 nullptr});\par
00173 \par
00174     QTest::mouseClick(cancel, Qt::LeftButton);\par
00175 \par
00176     QVERIFY(historyWin.isHidden());\par
00177 \}\par
00178 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
test_mynotesmaker.h\par \pard\plain 
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef TEST_MYNOTESMAKER_H}\par
00002 {\cf21 #define TEST_MYNOTESMAKER_H}\par
00003 \par
00004 {\cf21 #include <QMainWindow>}\par
00005 {\cf21 #include <QObject>}\par
00006 {\cf21 #include <QWidget>}\par
00007 {\cf21 #include "QFontDialog"}\par
00008 {\cf21 #include <QTest>}\par
00009 {\cf21 #include <QMessageBox>}\par
00010 \par
00011 {\cf21 #include <nlohmann/json.hpp>}\par
00012 {\cf21 #include "mainwindow.h"}\par
00013 {\cf21 #include "historywindow.h"}\par
00014 \par
00015 {\cf17 class }Test_MyNotesMaker : {\cf17 public} QObject\par
00016 \{\par
00017     Q_OBJECT\par
00018 {\cf17 public}:\par
00019     {\cf17 explicit} Test_MyNotesMaker(QObject *parent = {\cf17 nullptr});\par
00020 \par
00021 signals:\par
00022 \par
00023 {\cf17 private} slots:\par
00024     {\cf20 // Unit Tests MainWindow}\par
00025     {\cf18 void} testMainWindowHideButton();\par
00026     {\cf18 void} testMainWindowPinButton();\par
00027     {\cf18 void} testMainWindowLineEdit();\par
00028     {\cf18 void} testMainWindowPlainTextEdit();\par
00029     {\cf18 void} testMainWindowLineEditEnter();\par
00030 \par
00031 \par
00032     {\cf20 // Unit Tests History}\par
00033     {\cf18 void} testHistoryOpenNote();\par
00034     {\cf18 void} testHistoryDeleteButton();\par
00035     {\cf18 void} testHistoryCancleButton();\par
00036 \};\par
00037 \par
00038 {\cf21 #endif }{\cf20 // TEST_MYNOTESMAKER_H}\par
00039 \par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
